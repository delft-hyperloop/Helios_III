%implements s23_b0_f76ij_0_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

c_dsp_private_SlidingWindowAverageCG_TemplateLaserSensorsFull_T *obj;
int32_T i;
%closefile localVarDecl
%assign _modelSS = ""

%if SLibCG_FcnCallArgAccessed(0,3,0,1)
%<SLibCG_AccessArg(0 ,3, 1)>
%endif
%if SLibCG_FcnCallArgAccessed(0,3,0,2)
%<SLibCG_AccessArg(0 ,3, 0)>
%endif

/* {S!d2790}MATLABSystem: '<S1>/Moving Average' */
if (localDW->obj.TunablePropsChanged) {
    localDW->obj.TunablePropsChanged = false;
}
obj = localDW->obj.pStatistic;
if (obj->isInitialized != 1) {
    obj->isSetupComplete = false;
    obj->isInitialized = 1;
    obj->pCumSum = 0.0;
    for (i = 0; i < 1999; i++) {
        obj->pCumSumRev[i] = 0.0;
    }
    obj->pCumRevIndex = 1.0;
    obj->isSetupComplete = true;
    obj->pCumSum = 0.0;
    for (i = 0; i < 1999; i++) {
        obj->pCumSumRev[i] = 0.0;
    }
    obj->pCumRevIndex = 1.0;
}
/* {S!d2792}MATLABSystem: '<S1>/Moving Average' */
localB->MovingAverage = %<(SLibCGCallSubFcn("TemplateLaserSensorsFull_SlidingWindowAverageCG_stepImpl", ["obj", "rtu_0", "%<::tSimStruct>"], 0, 3, 0))>;
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(0, 3, 0)>
%endif
%if SLibCG_ArgAccessed(0, 3, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 3, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void TemplateLaserSensorsFull_MovingAverage(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 3, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("TemplateLaserSensorsFull_MovingAverage", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>real_T rtu_0\
%assign comma = ", "
%<comma>B_MovingAverage_TemplateLaserSensorsFull_T *localB\
%assign comma = ", "
%<comma>DW_MovingAverage_TemplateLaserSensorsFull_T *localDW\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 3, fcnProtoType)>
%endfunction
