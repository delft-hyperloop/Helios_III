This is a file full of useful configurations.
CAN IDs FOR CAN1

----------- Sensor Hub -----------
///  Pod Drop Switches  ///
PD1 = 136
PD2 = 137
PD3 = 141
PD4 = 105
PD5 = 109
PD6 = 107
PD7 = 127
PD8 = 104
PD9 = 126
PD10 = 127
PD11 = 114
PD12 = 125
PD13 = 111
PD14 = 112
PD15 = 110
PD16 = 124
EOT = 133
MCU_REARM = 108
MCU_BRAKE = 106
DRIVES = 138
EME = 135
DRIVES = 138

^^^^^^^^^^^^^^^^^^^^^^^^^^
If any of the values above is read as ID it means that the message buffer is empty and the pob had to brake for some reason.
Meaning that we will transition directly to the Emergency Braking state or the exit state.
The only ones im not so sure about are the MCU_REARM and MCU_BRAKE. Im not sure if they are pod drop switches or not or are simply the response to the requested action from the MCU.
^^^^^^^^^^^^^^^^^^^^^^^^^^


///   Pressure Sensors  ///
HIGH_PRESSURE_SENSOR = 140;
LOW_PRESSURE_SENSOR = 139;

//   IMU    //
/\ Accelerometer /\

 ACCX = 121;
 ACCY = 120;
 ACCZ = 119;

/\ Gyroscope /\

 GYRX = 118;
 GYRY = 117;
 GYRZ = 116;

/\ Temperature /\

 TEMP = 115;

^^^^^^^^^^^^^^^^^^^^^^^^^^
All the above need to have some kind of threshold to determine if the pod is in a safe state or not.
If so they will either trigger the Brakes or we will simply send this values to the ground station and it will send us back an emergency code or not.
This is still to be decided but we are sure they have to go to the ground station.
^^^^^^^^^^^^^^^^^^^^^^^^^^


-------- This was all for the sensor hub --------



===========  CAN IDs FOR CAN2  ===========

                !!!BMS!!!
  BASE-ID = 0x19C

  STARTUP = 0x19C    (+0)-> |   INPUT SIGNALS    | OUTPUT SIGNALS | NUMBER OF LIVE CELLS | CHARGING STAGE | CHARGING STAGE DURATION |5| LAST CHARGING ERROR |7|

  DIAGNOSTIC = 0x1A3 (+7)-> |  PROTECTION FLAGS  | WARNING (REDUCTION) FLAGS | 2 | BATTERY STATUS FLAGS |4|5|6|7|

  BATTERY_VOLTAGE_OVERALL = 0x19D (+1)->  | MIN CELL VOLTAGE | MAX CELL VOLTAGE | AVERAGE CELL VOLTAGE | 3 | TOTAL VOLTAGE | 5 | 6 | 7 | <-  All Values of Battery Voltage are encoded in 0.01V and MIN,MAX and AVERAGE have basis 2.00V, meaning that they are calculated as (Value * 0.01V)  +  2.00V
                                              
  CELL_MODULE_TEMPERATURE_OVERALL_PARAMETERS = 0X19E (+2) -> | MIN CELL MODULE TEMPERATURE | MAX CELL MODULE TEMPERATURE | AVG CELL MODULE TEMPERATURE |3|4|5|6|7| <-  All have a basis of -100C and are encoded in 1C
  
  Cell Temperature Overall Parameters = 0x1A4 (+8) -> | MIN CELL TEMPERATURE | MAX CELL TEMPERATURE | AVG CELL TEMPERATURE |3|4|5|6|7|
  
  Cell Balancing Rate Overall Parameters = 0x1A0 (+3) -> | MIN CELL BALANCING | MAX CELL BALANCING | AVG CELL BALANCING |3|4|5|6|7| <- 
  
  STATE_OF_CHARGE = 0x1A1 (+5) -> | CURRENT (MSB)| CURRENT (LSB) | ESTIMATED_CHARGE (MSB) | ESTIMATED_CHARGE (LSB) | 4 | 5 | ESTIMATED_STATE_OF_CHARGE | 7 | <- All are encoded in 0.1Ah units and state is incoded in percentage 1% units
  
  INDIVIDUAL_CELL_VOLTAGES = 0X1BC + Group_ID -> CELL VOLTAGE OF 1-8 GOES FROM DATA[0-7] <-Same voltage basis as before
  
  INDIVIDUAL_CELL_MODULE_TEMPERATURE = 0x1DC + GROUP_ID -> CELL MODULE TEMPERATURE OF 1-8 GOES FROM DATA[0-7] <-Same temperature basis as before

  INDIVIDUAL_CELL_TEMPERATURE = 0x29A + GROUP_ID -> CELL MODULE TEMPERATURE OF 1-8 GOES FROM DATA[0-7] <-Same temperature basis as before

  ===   !!! GROUND-FAULT-DETECTION !!!   ===
 
 == Here I still need to check which are the correct values for the ID but this is what the messages should be, i would also love to only broadcast it every 100ms as i think thats perfectly fine ===
 
 ISOLATION_DETAIL_INFO = 0x38 -> |[0,1] R_Iso_Neg| [2-3] R_Iso_Pos |[4-5] R_Iso_Original | Mesurement counter | Isolation Quality

 Isolation Tresholds = 125k olms



