{
  "version": 3,
  "sources": ["../../react-virtuoso/dist/index.mjs"],
  "sourcesContent": ["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nconst PUBLISH = 0;\nconst SUBSCRIBE = 1;\nconst RESET = 2;\nconst VALUE = 4;\nfunction compose(a, b) {\n  return (arg) => a(b(arg));\n}\nfunction thrush(arg, proc) {\n  return proc(arg);\n}\nfunction curry2to1(proc, arg1) {\n  return (arg2) => proc(arg1, arg2);\n}\nfunction curry1to0(proc, arg) {\n  return () => proc(arg);\n}\nfunction tap(arg, proc) {\n  proc(arg);\n  return arg;\n}\nfunction tup(...args) {\n  return args;\n}\nfunction call(proc) {\n  proc();\n}\nfunction always(value) {\n  return () => value;\n}\nfunction joinProc(...procs) {\n  return () => {\n    procs.map(call);\n  };\n}\nfunction isDefined(arg) {\n  return arg !== void 0;\n}\nfunction noop() {\n}\nfunction subscribe(emitter, subscription) {\n  return emitter(SUBSCRIBE, subscription);\n}\nfunction publish(publisher, value) {\n  publisher(PUBLISH, value);\n}\nfunction reset(emitter) {\n  emitter(RESET);\n}\nfunction getValue(depot) {\n  return depot(VALUE);\n}\nfunction connect(emitter, publisher) {\n  return subscribe(emitter, curry2to1(publisher, PUBLISH));\n}\nfunction handleNext(emitter, subscription) {\n  const unsub = emitter(SUBSCRIBE, (value) => {\n    unsub();\n    subscription(value);\n  });\n  return unsub;\n}\nfunction stream() {\n  const subscriptions = [];\n  return (action, arg) => {\n    switch (action) {\n      case RESET:\n        subscriptions.splice(0, subscriptions.length);\n        return;\n      case SUBSCRIBE:\n        subscriptions.push(arg);\n        return () => {\n          const indexOf = subscriptions.indexOf(arg);\n          if (indexOf > -1) {\n            subscriptions.splice(indexOf, 1);\n          }\n        };\n      case PUBLISH:\n        subscriptions.slice().forEach((subscription) => {\n          subscription(arg);\n        });\n        return;\n      default:\n        throw new Error(`unrecognized action ${action}`);\n    }\n  };\n}\nfunction statefulStream(initial) {\n  let value = initial;\n  const innerSubject = stream();\n  return (action, arg) => {\n    switch (action) {\n      case SUBSCRIBE:\n        const subscription = arg;\n        subscription(value);\n        break;\n      case PUBLISH:\n        value = arg;\n        break;\n      case VALUE:\n        return value;\n    }\n    return innerSubject(action, arg);\n  };\n}\nfunction eventHandler(emitter) {\n  let unsub;\n  let currentSubscription;\n  const cleanup = () => unsub && unsub();\n  return function(action, subscription) {\n    switch (action) {\n      case SUBSCRIBE:\n        if (subscription) {\n          if (currentSubscription === subscription) {\n            return;\n          }\n          cleanup();\n          currentSubscription = subscription;\n          unsub = subscribe(emitter, subscription);\n          return unsub;\n        } else {\n          cleanup();\n          return noop;\n        }\n      case RESET:\n        cleanup();\n        currentSubscription = null;\n        return;\n      default:\n        throw new Error(`unrecognized action ${action}`);\n    }\n  };\n}\nfunction streamFromEmitter(emitter) {\n  return tap(stream(), (stream2) => connect(emitter, stream2));\n}\nfunction statefulStreamFromEmitter(emitter, initial) {\n  return tap(statefulStream(initial), (stream2) => connect(emitter, stream2));\n}\nfunction combineOperators(...operators) {\n  return (subscriber) => {\n    return operators.reduceRight(thrush, subscriber);\n  };\n}\nfunction pipe(source, ...operators) {\n  const project = combineOperators(...operators);\n  return (action, subscription) => {\n    switch (action) {\n      case SUBSCRIBE:\n        return subscribe(source, project(subscription));\n      case RESET:\n        reset(source);\n        return;\n    }\n  };\n}\nfunction defaultComparator(previous, next) {\n  return previous === next;\n}\nfunction distinctUntilChanged(comparator = defaultComparator) {\n  let current;\n  return (done) => (next) => {\n    if (!comparator(current, next)) {\n      current = next;\n      done(next);\n    }\n  };\n}\nfunction filter(predicate) {\n  return (done) => (value) => {\n    predicate(value) && done(value);\n  };\n}\nfunction map(project) {\n  return (done) => compose(done, project);\n}\nfunction mapTo(value) {\n  return (done) => () => done(value);\n}\nfunction scan(scanner, initial) {\n  return (done) => (value) => done(initial = scanner(initial, value));\n}\nfunction skip(times) {\n  return (done) => (value) => {\n    times > 0 ? times-- : done(value);\n  };\n}\nfunction throttleTime(interval) {\n  let currentValue = null;\n  let timeout;\n  return (done) => (value) => {\n    currentValue = value;\n    if (timeout) {\n      return;\n    }\n    timeout = setTimeout(() => {\n      timeout = void 0;\n      done(currentValue);\n    }, interval);\n  };\n}\nfunction debounceTime(interval) {\n  let currentValue;\n  let timeout;\n  return (done) => (value) => {\n    currentValue = value;\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    timeout = setTimeout(() => {\n      done(currentValue);\n    }, interval);\n  };\n}\nfunction withLatestFrom(...sources) {\n  const values = new Array(sources.length);\n  let called = 0;\n  let pendingCall = null;\n  const allCalled = Math.pow(2, sources.length) - 1;\n  sources.forEach((source, index) => {\n    const bit = Math.pow(2, index);\n    subscribe(source, (value) => {\n      const prevCalled = called;\n      called = called | bit;\n      values[index] = value;\n      if (prevCalled !== allCalled && called === allCalled && pendingCall) {\n        pendingCall();\n        pendingCall = null;\n      }\n    });\n  });\n  return (done) => (value) => {\n    const call2 = () => done([value].concat(values));\n    if (called === allCalled) {\n      call2();\n    } else {\n      pendingCall = call2;\n    }\n  };\n}\nfunction merge(...sources) {\n  return function(action, subscription) {\n    switch (action) {\n      case SUBSCRIBE:\n        return joinProc(...sources.map((source) => subscribe(source, subscription)));\n      case RESET:\n        return;\n      default:\n        throw new Error(`unrecognized action ${action}`);\n    }\n  };\n}\nfunction duc(source, comparator = defaultComparator) {\n  return pipe(source, distinctUntilChanged(comparator));\n}\nfunction combineLatest(...emitters) {\n  const innerSubject = stream();\n  const values = new Array(emitters.length);\n  let called = 0;\n  const allCalled = Math.pow(2, emitters.length) - 1;\n  emitters.forEach((source, index) => {\n    const bit = Math.pow(2, index);\n    subscribe(source, (value) => {\n      values[index] = value;\n      called = called | bit;\n      if (called === allCalled) {\n        publish(innerSubject, values);\n      }\n    });\n  });\n  return function(action, subscription) {\n    switch (action) {\n      case SUBSCRIBE:\n        if (called === allCalled) {\n          subscription(values);\n        }\n        return subscribe(innerSubject, subscription);\n      case RESET:\n        return reset(innerSubject);\n      default:\n        throw new Error(`unrecognized action ${action}`);\n    }\n  };\n}\nfunction system(constructor, dependencies = [], { singleton } = { singleton: true }) {\n  return {\n    id: id(),\n    constructor,\n    dependencies,\n    singleton\n  };\n}\nconst id = () => Symbol();\nfunction init(systemSpec) {\n  const singletons = /* @__PURE__ */ new Map();\n  const _init = ({ id: id2, constructor, dependencies, singleton }) => {\n    if (singleton && singletons.has(id2)) {\n      return singletons.get(id2);\n    }\n    const system2 = constructor(dependencies.map((e) => _init(e)));\n    if (singleton) {\n      singletons.set(id2, system2);\n    }\n    return system2;\n  };\n  return _init(systemSpec);\n}\nfunction omit(keys, obj) {\n  const result = {};\n  const index = {};\n  let idx = 0;\n  const len = keys.length;\n  while (idx < len) {\n    index[keys[idx]] = 1;\n    idx += 1;\n  }\n  for (const prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n}\nconst useIsomorphicLayoutEffect$2 = typeof document !== \"undefined\" ? React.useLayoutEffect : React.useEffect;\nfunction systemToComponent(systemSpec, map2, Root) {\n  const requiredPropNames = Object.keys(map2.required || {});\n  const optionalPropNames = Object.keys(map2.optional || {});\n  const methodNames = Object.keys(map2.methods || {});\n  const eventNames = Object.keys(map2.events || {});\n  const Context = React.createContext({});\n  function applyPropsToSystem(system2, props) {\n    if (system2[\"propsReady\"]) {\n      publish(system2[\"propsReady\"], false);\n    }\n    for (const requiredPropName of requiredPropNames) {\n      const stream2 = system2[map2.required[requiredPropName]];\n      publish(stream2, props[requiredPropName]);\n    }\n    for (const optionalPropName of optionalPropNames) {\n      if (optionalPropName in props) {\n        const stream2 = system2[map2.optional[optionalPropName]];\n        publish(stream2, props[optionalPropName]);\n      }\n    }\n    if (system2[\"propsReady\"]) {\n      publish(system2[\"propsReady\"], true);\n    }\n  }\n  function buildMethods(system2) {\n    return methodNames.reduce((acc, methodName) => {\n      acc[methodName] = (value) => {\n        const stream2 = system2[map2.methods[methodName]];\n        publish(stream2, value);\n      };\n      return acc;\n    }, {});\n  }\n  function buildEventHandlers(system2) {\n    return eventNames.reduce((handlers, eventName) => {\n      handlers[eventName] = eventHandler(system2[map2.events[eventName]]);\n      return handlers;\n    }, {});\n  }\n  const Component = React.forwardRef((propsWithChildren, ref) => {\n    const { children, ...props } = propsWithChildren;\n    const [system2] = React.useState(() => {\n      return tap(init(systemSpec), (system22) => applyPropsToSystem(system22, props));\n    });\n    const [handlers] = React.useState(curry1to0(buildEventHandlers, system2));\n    useIsomorphicLayoutEffect$2(() => {\n      for (const eventName of eventNames) {\n        if (eventName in props) {\n          subscribe(handlers[eventName], props[eventName]);\n        }\n      }\n      return () => {\n        Object.values(handlers).map(reset);\n      };\n    }, [props, handlers, system2]);\n    useIsomorphicLayoutEffect$2(() => {\n      applyPropsToSystem(system2, props);\n    });\n    React.useImperativeHandle(ref, always(buildMethods(system2)));\n    return React.createElement(\n      Context.Provider,\n      { value: system2 },\n      Root ? React.createElement(\n        Root,\n        omit([...requiredPropNames, ...optionalPropNames, ...eventNames], props),\n        children\n      ) : children\n    );\n  });\n  const usePublisher2 = (key) => {\n    return React.useCallback(curry2to1(publish, React.useContext(Context)[key]), [key]);\n  };\n  const useEmitterValue18 = (key) => {\n    const system2 = React.useContext(Context);\n    const source = system2[key];\n    const cb = React.useCallback(\n      (c) => {\n        return subscribe(source, c);\n      },\n      [source]\n    );\n    return React.useSyncExternalStore(\n      cb,\n      () => getValue(source),\n      () => getValue(source)\n    );\n  };\n  const useEmitterValueLegacy = (key) => {\n    const system2 = React.useContext(Context);\n    const source = system2[key];\n    const [value, setValue] = React.useState(curry1to0(getValue, source));\n    useIsomorphicLayoutEffect$2(\n      () => subscribe(source, (next) => {\n        if (next !== value) {\n          setValue(always(next));\n        }\n      }),\n      [source, value]\n    );\n    return value;\n  };\n  const useEmitterValue2 = React.version.startsWith(\"18\") ? useEmitterValue18 : useEmitterValueLegacy;\n  const useEmitter2 = (key, callback) => {\n    const context = React.useContext(Context);\n    const source = context[key];\n    useIsomorphicLayoutEffect$2(() => subscribe(source, callback), [callback, source]);\n  };\n  return {\n    Component,\n    usePublisher: usePublisher2,\n    useEmitterValue: useEmitterValue2,\n    useEmitter: useEmitter2\n  };\n}\nconst useIsomorphicLayoutEffect = typeof document !== \"undefined\" ? React.useLayoutEffect : React.useEffect;\nconst useIsomorphicLayoutEffect$1 = useIsomorphicLayoutEffect;\nvar LogLevel = /* @__PURE__ */ ((LogLevel2) => {\n  LogLevel2[LogLevel2[\"DEBUG\"] = 0] = \"DEBUG\";\n  LogLevel2[LogLevel2[\"INFO\"] = 1] = \"INFO\";\n  LogLevel2[LogLevel2[\"WARN\"] = 2] = \"WARN\";\n  LogLevel2[LogLevel2[\"ERROR\"] = 3] = \"ERROR\";\n  return LogLevel2;\n})(LogLevel || {});\nconst CONSOLE_METHOD_MAP = {\n  [\n    0\n    /* DEBUG */\n  ]: \"debug\",\n  [\n    1\n    /* INFO */\n  ]: \"log\",\n  [\n    2\n    /* WARN */\n  ]: \"warn\",\n  [\n    3\n    /* ERROR */\n  ]: \"error\"\n};\nconst getGlobalThis = () => typeof globalThis === \"undefined\" ? window : globalThis;\nconst loggerSystem = system(\n  () => {\n    const logLevel = statefulStream(\n      3\n      /* ERROR */\n    );\n    const log = statefulStream((label, message, level = 1) => {\n      var _a;\n      const currentLevel = (_a = getGlobalThis()[\"VIRTUOSO_LOG_LEVEL\"]) != null ? _a : getValue(logLevel);\n      if (level >= currentLevel) {\n        console[CONSOLE_METHOD_MAP[level]](\n          \"%creact-virtuoso: %c%s %o\",\n          \"color: #0253b3; font-weight: bold\",\n          \"color: initial\",\n          label,\n          message\n        );\n      }\n    });\n    return {\n      log,\n      logLevel\n    };\n  },\n  [],\n  { singleton: true }\n);\nfunction useSizeWithElRef(callback, enabled = true) {\n  const ref = React.useRef(null);\n  let callbackRef = (_el) => {\n  };\n  if (typeof ResizeObserver !== \"undefined\") {\n    const observer = React.useMemo(() => {\n      return new ResizeObserver((entries) => {\n        const element = entries[0].target;\n        if (element.offsetParent !== null) {\n          requestAnimationFrame(() => {\n            callback(element);\n          });\n        }\n      });\n    }, [callback]);\n    callbackRef = (elRef) => {\n      if (elRef && enabled) {\n        observer.observe(elRef);\n        ref.current = elRef;\n      } else {\n        if (ref.current) {\n          observer.unobserve(ref.current);\n        }\n        ref.current = null;\n      }\n    };\n  }\n  return { ref, callbackRef };\n}\nfunction useSize(callback, enabled = true) {\n  return useSizeWithElRef(callback, enabled).callbackRef;\n}\nfunction useChangedListContentsSizes(callback, itemSize, enabled, scrollContainerStateCallback, log, gap, customScrollParent) {\n  const memoedCallback = React.useCallback(\n    (el) => {\n      const ranges = getChangedChildSizes(el.children, itemSize, \"offsetHeight\", log);\n      let scrollableElement = el.parentElement;\n      while (!scrollableElement.dataset[\"virtuosoScroller\"]) {\n        scrollableElement = scrollableElement.parentElement;\n      }\n      const windowScrolling = scrollableElement.lastElementChild.dataset[\"viewportType\"] === \"window\";\n      const scrollTop = customScrollParent ? customScrollParent.scrollTop : windowScrolling ? window.pageYOffset || document.documentElement.scrollTop : scrollableElement.scrollTop;\n      const scrollHeight = customScrollParent ? customScrollParent.scrollHeight : windowScrolling ? document.documentElement.scrollHeight : scrollableElement.scrollHeight;\n      const viewportHeight = customScrollParent ? customScrollParent.offsetHeight : windowScrolling ? window.innerHeight : scrollableElement.offsetHeight;\n      scrollContainerStateCallback({\n        scrollTop: Math.max(scrollTop, 0),\n        scrollHeight,\n        viewportHeight\n      });\n      gap == null ? void 0 : gap(resolveGapValue$1(\"row-gap\", getComputedStyle(el).rowGap, log));\n      if (ranges !== null) {\n        callback(ranges);\n      }\n    },\n    [callback, itemSize, log, gap, customScrollParent, scrollContainerStateCallback]\n  );\n  return useSizeWithElRef(memoedCallback, enabled);\n}\nfunction getChangedChildSizes(children, itemSize, field, log) {\n  const length = children.length;\n  if (length === 0) {\n    return null;\n  }\n  const results = [];\n  for (let i = 0; i < length; i++) {\n    const child = children.item(i);\n    if (!child || child.dataset.index === void 0) {\n      continue;\n    }\n    const index = parseInt(child.dataset.index);\n    const knownSize = parseFloat(child.dataset.knownSize);\n    const size = itemSize(child, field);\n    if (size === 0) {\n      log(\"Zero-sized element, this should not happen\", { child }, LogLevel.ERROR);\n    }\n    if (size === knownSize) {\n      continue;\n    }\n    const lastResult = results[results.length - 1];\n    if (results.length === 0 || lastResult.size !== size || lastResult.endIndex !== index - 1) {\n      results.push({ startIndex: index, endIndex: index, size });\n    } else {\n      results[results.length - 1].endIndex++;\n    }\n  }\n  return results;\n}\nfunction resolveGapValue$1(property, value, log) {\n  if (value !== \"normal\" && !(value == null ? void 0 : value.endsWith(\"px\"))) {\n    log(`${property} was not resolved to pixel value correctly`, value, LogLevel.WARN);\n  }\n  if (value === \"normal\") {\n    return 0;\n  }\n  return parseInt(value != null ? value : \"0\", 10);\n}\nfunction correctItemSize(el, dimension) {\n  return Math.round(el.getBoundingClientRect()[dimension]);\n}\nfunction approximatelyEqual(num1, num2) {\n  return Math.abs(num1 - num2) < 1.01;\n}\nfunction useScrollTop(scrollContainerStateCallback, smoothScrollTargetReached, scrollerElement, scrollerRefCallback = noop, customScrollParent) {\n  const scrollerRef = React.useRef(null);\n  const scrollTopTarget = React.useRef(null);\n  const timeoutRef = React.useRef(null);\n  const handler = React.useCallback(\n    (ev) => {\n      const el = ev.target;\n      const windowScroll = el === window || el === document;\n      const scrollTop = windowScroll ? window.pageYOffset || document.documentElement.scrollTop : el.scrollTop;\n      const scrollHeight = windowScroll ? document.documentElement.scrollHeight : el.scrollHeight;\n      const viewportHeight = windowScroll ? window.innerHeight : el.offsetHeight;\n      const call2 = () => {\n        scrollContainerStateCallback({\n          scrollTop: Math.max(scrollTop, 0),\n          scrollHeight,\n          viewportHeight\n        });\n      };\n      if (ev.suppressFlushSync) {\n        call2();\n      } else {\n        ReactDOM.flushSync(call2);\n      }\n      if (scrollTopTarget.current !== null) {\n        if (scrollTop === scrollTopTarget.current || scrollTop <= 0 || scrollTop === scrollHeight - viewportHeight) {\n          scrollTopTarget.current = null;\n          smoothScrollTargetReached(true);\n          if (timeoutRef.current) {\n            clearTimeout(timeoutRef.current);\n            timeoutRef.current = null;\n          }\n        }\n      }\n    },\n    [scrollContainerStateCallback, smoothScrollTargetReached]\n  );\n  React.useEffect(() => {\n    const localRef = customScrollParent ? customScrollParent : scrollerRef.current;\n    scrollerRefCallback(customScrollParent ? customScrollParent : scrollerRef.current);\n    handler({ target: localRef, suppressFlushSync: true });\n    localRef.addEventListener(\"scroll\", handler, { passive: true });\n    return () => {\n      scrollerRefCallback(null);\n      localRef.removeEventListener(\"scroll\", handler);\n    };\n  }, [scrollerRef, handler, scrollerElement, scrollerRefCallback, customScrollParent]);\n  function scrollToCallback(location) {\n    const scrollerElement2 = scrollerRef.current;\n    if (!scrollerElement2 || \"offsetHeight\" in scrollerElement2 && scrollerElement2.offsetHeight === 0) {\n      return;\n    }\n    const isSmooth = location.behavior === \"smooth\";\n    let offsetHeight;\n    let scrollHeight;\n    let scrollTop;\n    if (scrollerElement2 === window) {\n      scrollHeight = Math.max(correctItemSize(document.documentElement, \"height\"), document.documentElement.scrollHeight);\n      offsetHeight = window.innerHeight;\n      scrollTop = document.documentElement.scrollTop;\n    } else {\n      scrollHeight = scrollerElement2.scrollHeight;\n      offsetHeight = correctItemSize(scrollerElement2, \"height\");\n      scrollTop = scrollerElement2.scrollTop;\n    }\n    const maxScrollTop = scrollHeight - offsetHeight;\n    location.top = Math.ceil(Math.max(Math.min(maxScrollTop, location.top), 0));\n    if (approximatelyEqual(offsetHeight, scrollHeight) || location.top === scrollTop) {\n      scrollContainerStateCallback({ scrollTop, scrollHeight, viewportHeight: offsetHeight });\n      if (isSmooth) {\n        smoothScrollTargetReached(true);\n      }\n      return;\n    }\n    if (isSmooth) {\n      scrollTopTarget.current = location.top;\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n      timeoutRef.current = setTimeout(() => {\n        timeoutRef.current = null;\n        scrollTopTarget.current = null;\n        smoothScrollTargetReached(true);\n      }, 1e3);\n    } else {\n      scrollTopTarget.current = null;\n    }\n    scrollerElement2.scrollTo(location);\n  }\n  function scrollByCallback(location) {\n    scrollerRef.current.scrollBy(location);\n  }\n  return { scrollerRef, scrollByCallback, scrollToCallback };\n}\nconst domIOSystem = system(\n  () => {\n    const scrollContainerState = stream();\n    const scrollTop = stream();\n    const deviation = statefulStream(0);\n    const smoothScrollTargetReached = stream();\n    const statefulScrollTop = statefulStream(0);\n    const viewportHeight = stream();\n    const scrollHeight = stream();\n    const headerHeight = statefulStream(0);\n    const fixedHeaderHeight = statefulStream(0);\n    const fixedFooterHeight = statefulStream(0);\n    const footerHeight = statefulStream(0);\n    const scrollTo = stream();\n    const scrollBy = stream();\n    const scrollingInProgress = statefulStream(false);\n    connect(\n      pipe(\n        scrollContainerState,\n        map(({ scrollTop: scrollTop2 }) => scrollTop2)\n      ),\n      scrollTop\n    );\n    connect(\n      pipe(\n        scrollContainerState,\n        map(({ scrollHeight: scrollHeight2 }) => scrollHeight2)\n      ),\n      scrollHeight\n    );\n    connect(scrollTop, statefulScrollTop);\n    return {\n      // input\n      scrollContainerState,\n      scrollTop,\n      viewportHeight,\n      headerHeight,\n      fixedHeaderHeight,\n      fixedFooterHeight,\n      footerHeight,\n      scrollHeight,\n      smoothScrollTargetReached,\n      // signals\n      scrollTo,\n      scrollBy,\n      // state\n      statefulScrollTop,\n      deviation,\n      scrollingInProgress\n    };\n  },\n  [],\n  { singleton: true }\n);\nconst NIL_NODE = { lvl: 0 };\nfunction newAANode(k, v, lvl, l = NIL_NODE, r = NIL_NODE) {\n  return { k, v, lvl, l, r };\n}\nfunction empty(node) {\n  return node === NIL_NODE;\n}\nfunction newTree() {\n  return NIL_NODE;\n}\nfunction remove(node, key) {\n  if (empty(node))\n    return NIL_NODE;\n  const { k, l, r } = node;\n  if (key === k) {\n    if (empty(l)) {\n      return r;\n    } else if (empty(r)) {\n      return l;\n    } else {\n      const [lastKey, lastValue] = last(l);\n      return adjust(clone(node, { k: lastKey, v: lastValue, l: deleteLast(l) }));\n    }\n  } else if (key < k) {\n    return adjust(clone(node, { l: remove(l, key) }));\n  } else {\n    return adjust(clone(node, { r: remove(r, key) }));\n  }\n}\nfunction find(node, key) {\n  if (empty(node)) {\n    return;\n  }\n  if (key === node.k) {\n    return node.v;\n  } else if (key < node.k) {\n    return find(node.l, key);\n  } else {\n    return find(node.r, key);\n  }\n}\nfunction findMaxKeyValue(node, value, field = \"k\") {\n  if (empty(node)) {\n    return [-Infinity, void 0];\n  }\n  if (Number(node[field]) === value) {\n    return [node.k, node.v];\n  }\n  if (Number(node[field]) < value) {\n    const r = findMaxKeyValue(node.r, value, field);\n    if (r[0] === -Infinity) {\n      return [node.k, node.v];\n    } else {\n      return r;\n    }\n  }\n  return findMaxKeyValue(node.l, value, field);\n}\nfunction insert(node, k, v) {\n  if (empty(node)) {\n    return newAANode(k, v, 1);\n  }\n  if (k === node.k) {\n    return clone(node, { k, v });\n  } else if (k < node.k) {\n    return rebalance(clone(node, { l: insert(node.l, k, v) }));\n  } else {\n    return rebalance(clone(node, { r: insert(node.r, k, v) }));\n  }\n}\nfunction walkWithin(node, start, end) {\n  if (empty(node)) {\n    return [];\n  }\n  const { k, v, l, r } = node;\n  let result = [];\n  if (k > start) {\n    result = result.concat(walkWithin(l, start, end));\n  }\n  if (k >= start && k <= end) {\n    result.push({ k, v });\n  }\n  if (k <= end) {\n    result = result.concat(walkWithin(r, start, end));\n  }\n  return result;\n}\nfunction walk(node) {\n  if (empty(node)) {\n    return [];\n  }\n  return [...walk(node.l), { k: node.k, v: node.v }, ...walk(node.r)];\n}\nfunction last(node) {\n  return empty(node.r) ? [node.k, node.v] : last(node.r);\n}\nfunction deleteLast(node) {\n  return empty(node.r) ? node.l : adjust(clone(node, { r: deleteLast(node.r) }));\n}\nfunction clone(node, args) {\n  return newAANode(\n    args.k !== void 0 ? args.k : node.k,\n    args.v !== void 0 ? args.v : node.v,\n    args.lvl !== void 0 ? args.lvl : node.lvl,\n    args.l !== void 0 ? args.l : node.l,\n    args.r !== void 0 ? args.r : node.r\n  );\n}\nfunction isSingle(node) {\n  return empty(node) || node.lvl > node.r.lvl;\n}\nfunction rebalance(node) {\n  return split(skew(node));\n}\nfunction adjust(node) {\n  const { l, r, lvl } = node;\n  if (r.lvl >= lvl - 1 && l.lvl >= lvl - 1) {\n    return node;\n  } else if (lvl > r.lvl + 1) {\n    if (isSingle(l)) {\n      return skew(clone(node, { lvl: lvl - 1 }));\n    } else {\n      if (!empty(l) && !empty(l.r)) {\n        return clone(l.r, {\n          l: clone(l, { r: l.r.l }),\n          r: clone(node, {\n            l: l.r.r,\n            lvl: lvl - 1\n          }),\n          lvl\n        });\n      } else {\n        throw new Error(\"Unexpected empty nodes\");\n      }\n    }\n  } else {\n    if (isSingle(node)) {\n      return split(clone(node, { lvl: lvl - 1 }));\n    } else {\n      if (!empty(r) && !empty(r.l)) {\n        const rl = r.l;\n        const rlvl = isSingle(rl) ? r.lvl - 1 : r.lvl;\n        return clone(rl, {\n          l: clone(node, {\n            r: rl.l,\n            lvl: lvl - 1\n          }),\n          r: split(clone(r, { l: rl.r, lvl: rlvl })),\n          lvl: rl.lvl + 1\n        });\n      } else {\n        throw new Error(\"Unexpected empty nodes\");\n      }\n    }\n  }\n}\nfunction rangesWithin(node, startIndex, endIndex) {\n  if (empty(node)) {\n    return [];\n  }\n  const adjustedStart = findMaxKeyValue(node, startIndex)[0];\n  return toRanges(walkWithin(node, adjustedStart, endIndex));\n}\nfunction arrayToRanges(items, parser) {\n  const length = items.length;\n  if (length === 0) {\n    return [];\n  }\n  let { index: start, value } = parser(items[0]);\n  const result = [];\n  for (let i = 1; i < length; i++) {\n    const { index: nextIndex, value: nextValue } = parser(items[i]);\n    result.push({ start, end: nextIndex - 1, value });\n    start = nextIndex;\n    value = nextValue;\n  }\n  result.push({ start, end: Infinity, value });\n  return result;\n}\nfunction toRanges(nodes) {\n  return arrayToRanges(nodes, ({ k: index, v: value }) => ({ index, value }));\n}\nfunction split(node) {\n  const { r, lvl } = node;\n  return !empty(r) && !empty(r.r) && r.lvl === lvl && r.r.lvl === lvl ? clone(r, { l: clone(node, { r: r.l }), lvl: lvl + 1 }) : node;\n}\nfunction skew(node) {\n  const { l } = node;\n  return !empty(l) && l.lvl === node.lvl ? clone(l, { r: clone(node, { l: l.r }) }) : node;\n}\nfunction findIndexOfClosestSmallerOrEqual(items, value, comparator, start = 0) {\n  let end = items.length - 1;\n  while (start <= end) {\n    const index = Math.floor((start + end) / 2);\n    const item = items[index];\n    const match = comparator(item, value);\n    if (match === 0) {\n      return index;\n    }\n    if (match === -1) {\n      if (end - start < 2) {\n        return index - 1;\n      }\n      end = index - 1;\n    } else {\n      if (end === start) {\n        return index;\n      }\n      start = index + 1;\n    }\n  }\n  throw new Error(`Failed binary finding record in array - ${items.join(\",\")}, searched for ${value}`);\n}\nfunction findClosestSmallerOrEqual(items, value, comparator) {\n  return items[findIndexOfClosestSmallerOrEqual(items, value, comparator)];\n}\nfunction findRange(items, startValue, endValue, comparator) {\n  const startIndex = findIndexOfClosestSmallerOrEqual(items, startValue, comparator);\n  const endIndex = findIndexOfClosestSmallerOrEqual(items, endValue, comparator, startIndex);\n  return items.slice(startIndex, endIndex + 1);\n}\nconst recalcSystem = system(\n  () => {\n    const recalcInProgress = statefulStream(false);\n    return { recalcInProgress };\n  },\n  [],\n  { singleton: true }\n);\nfunction rangeIncludes(refRange) {\n  const { size, startIndex, endIndex } = refRange;\n  return (range) => {\n    return range.start === startIndex && (range.end === endIndex || range.end === Infinity) && range.value === size;\n  };\n}\nfunction affectedGroupCount(offset, groupIndices) {\n  let recognizedOffsetItems = 0;\n  let groupIndex = 0;\n  while (recognizedOffsetItems < offset) {\n    recognizedOffsetItems += groupIndices[groupIndex + 1] - groupIndices[groupIndex] - 1;\n    groupIndex++;\n  }\n  const offsetIsExact = recognizedOffsetItems === offset;\n  return groupIndex - (offsetIsExact ? 0 : 1);\n}\nfunction insertRanges(sizeTree, ranges) {\n  let syncStart = empty(sizeTree) ? 0 : Infinity;\n  for (const range of ranges) {\n    const { size, startIndex, endIndex } = range;\n    syncStart = Math.min(syncStart, startIndex);\n    if (empty(sizeTree)) {\n      sizeTree = insert(sizeTree, 0, size);\n      continue;\n    }\n    const overlappingRanges = rangesWithin(sizeTree, startIndex - 1, endIndex + 1);\n    if (overlappingRanges.some(rangeIncludes(range))) {\n      continue;\n    }\n    let firstPassDone = false;\n    let shouldInsert = false;\n    for (const { start: rangeStart, end: rangeEnd, value: rangeValue } of overlappingRanges) {\n      if (!firstPassDone) {\n        shouldInsert = rangeValue !== size;\n        firstPassDone = true;\n      } else {\n        if (endIndex >= rangeStart || size === rangeValue) {\n          sizeTree = remove(sizeTree, rangeStart);\n        }\n      }\n      if (rangeEnd > endIndex && endIndex >= rangeStart) {\n        if (rangeValue !== size) {\n          sizeTree = insert(sizeTree, endIndex + 1, rangeValue);\n        }\n      }\n    }\n    if (shouldInsert) {\n      sizeTree = insert(sizeTree, startIndex, size);\n    }\n  }\n  return [sizeTree, syncStart];\n}\nfunction initialSizeState() {\n  return {\n    offsetTree: [],\n    sizeTree: newTree(),\n    groupOffsetTree: newTree(),\n    lastIndex: 0,\n    lastOffset: 0,\n    lastSize: 0,\n    groupIndices: []\n  };\n}\nfunction indexComparator({ index: itemIndex }, index) {\n  return index === itemIndex ? 0 : index < itemIndex ? -1 : 1;\n}\nfunction offsetComparator({ offset: itemOffset }, offset) {\n  return offset === itemOffset ? 0 : offset < itemOffset ? -1 : 1;\n}\nfunction offsetPointParser(point) {\n  return { index: point.index, value: point };\n}\nfunction rangesWithinOffsets(tree, startOffset, endOffset, minStartIndex = 0) {\n  if (minStartIndex > 0) {\n    startOffset = Math.max(startOffset, findClosestSmallerOrEqual(tree, minStartIndex, indexComparator).offset);\n  }\n  return arrayToRanges(findRange(tree, startOffset, endOffset, offsetComparator), offsetPointParser);\n}\nfunction createOffsetTree(prevOffsetTree, syncStart, sizeTree, gap) {\n  let offsetTree = prevOffsetTree;\n  let prevIndex = 0;\n  let prevSize = 0;\n  let prevOffset = 0;\n  let startIndex = 0;\n  if (syncStart !== 0) {\n    startIndex = findIndexOfClosestSmallerOrEqual(offsetTree, syncStart - 1, indexComparator);\n    const offsetInfo = offsetTree[startIndex];\n    prevOffset = offsetInfo.offset;\n    const kv = findMaxKeyValue(sizeTree, syncStart - 1);\n    prevIndex = kv[0];\n    prevSize = kv[1];\n    if (offsetTree.length && offsetTree[startIndex].size === findMaxKeyValue(sizeTree, syncStart)[1]) {\n      startIndex -= 1;\n    }\n    offsetTree = offsetTree.slice(0, startIndex + 1);\n  } else {\n    offsetTree = [];\n  }\n  for (const { start: startIndex2, value } of rangesWithin(sizeTree, syncStart, Infinity)) {\n    const indexOffset = startIndex2 - prevIndex;\n    const aOffset = indexOffset * prevSize + prevOffset + indexOffset * gap;\n    offsetTree.push({\n      offset: aOffset,\n      size: value,\n      index: startIndex2\n    });\n    prevIndex = startIndex2;\n    prevOffset = aOffset;\n    prevSize = value;\n  }\n  return {\n    offsetTree,\n    lastIndex: prevIndex,\n    lastOffset: prevOffset,\n    lastSize: prevSize\n  };\n}\nfunction sizeStateReducer(state, [ranges, groupIndices, log, gap]) {\n  if (ranges.length > 0) {\n    log(\"received item sizes\", ranges, LogLevel.DEBUG);\n  }\n  const sizeTree = state.sizeTree;\n  let newSizeTree = sizeTree;\n  let syncStart = 0;\n  if (groupIndices.length > 0 && empty(sizeTree) && ranges.length === 2) {\n    const groupSize = ranges[0].size;\n    const itemSize = ranges[1].size;\n    newSizeTree = groupIndices.reduce((tree, groupIndex) => {\n      return insert(insert(tree, groupIndex, groupSize), groupIndex + 1, itemSize);\n    }, newSizeTree);\n  } else {\n    [newSizeTree, syncStart] = insertRanges(newSizeTree, ranges);\n  }\n  if (newSizeTree === sizeTree) {\n    return state;\n  }\n  const { offsetTree: newOffsetTree, lastIndex, lastSize, lastOffset } = createOffsetTree(state.offsetTree, syncStart, newSizeTree, gap);\n  return {\n    sizeTree: newSizeTree,\n    offsetTree: newOffsetTree,\n    lastIndex,\n    lastOffset,\n    lastSize,\n    groupOffsetTree: groupIndices.reduce((tree, index) => {\n      return insert(tree, index, offsetOf(index, newOffsetTree, gap));\n    }, newTree()),\n    groupIndices\n  };\n}\nfunction offsetOf(index, tree, gap) {\n  if (tree.length === 0) {\n    return 0;\n  }\n  const { offset, index: startIndex, size } = findClosestSmallerOrEqual(tree, index, indexComparator);\n  const itemCount = index - startIndex;\n  const top = size * itemCount + (itemCount - 1) * gap + offset;\n  return top > 0 ? top + gap : top;\n}\nfunction isGroupLocation(location) {\n  return typeof location.groupIndex !== \"undefined\";\n}\nfunction originalIndexFromLocation(location, sizes, lastIndex) {\n  if (isGroupLocation(location)) {\n    return sizes.groupIndices[location.groupIndex] + 1;\n  } else {\n    const numericIndex = location.index === \"LAST\" ? lastIndex : location.index;\n    let result = originalIndexFromItemIndex(numericIndex, sizes);\n    result = Math.max(0, result, Math.min(lastIndex, result));\n    return result;\n  }\n}\nfunction originalIndexFromItemIndex(itemIndex, sizes) {\n  if (!hasGroups(sizes)) {\n    return itemIndex;\n  }\n  let groupOffset = 0;\n  while (sizes.groupIndices[groupOffset] <= itemIndex + groupOffset) {\n    groupOffset++;\n  }\n  return itemIndex + groupOffset;\n}\nfunction hasGroups(sizes) {\n  return !empty(sizes.groupOffsetTree);\n}\nfunction sizeTreeToRanges(sizeTree) {\n  return walk(sizeTree).map(({ k: startIndex, v: size }, index, sizeArray) => {\n    const nextSize = sizeArray[index + 1];\n    const endIndex = nextSize ? nextSize.k - 1 : Infinity;\n    return { startIndex, endIndex, size };\n  });\n}\nconst SIZE_MAP = {\n  offsetHeight: \"height\",\n  offsetWidth: \"width\"\n};\nconst sizeSystem = system(\n  ([{ log }, { recalcInProgress }]) => {\n    const sizeRanges = stream();\n    const totalCount = stream();\n    const statefulTotalCount = statefulStreamFromEmitter(totalCount, 0);\n    const unshiftWith = stream();\n    const shiftWith = stream();\n    const firstItemIndex = statefulStream(0);\n    const groupIndices = statefulStream([]);\n    const fixedItemSize = statefulStream(void 0);\n    const defaultItemSize = statefulStream(void 0);\n    const itemSize = statefulStream((el, field) => correctItemSize(el, SIZE_MAP[field]));\n    const data = statefulStream(void 0);\n    const gap = statefulStream(0);\n    const initial = initialSizeState();\n    const sizes = statefulStreamFromEmitter(\n      pipe(sizeRanges, withLatestFrom(groupIndices, log, gap), scan(sizeStateReducer, initial), distinctUntilChanged()),\n      initial\n    );\n    const prevGroupIndices = statefulStreamFromEmitter(\n      pipe(\n        groupIndices,\n        distinctUntilChanged(),\n        scan((prev, curr) => ({ prev: prev.current, current: curr }), {\n          prev: [],\n          current: []\n        }),\n        map(({ prev }) => prev)\n      ),\n      []\n    );\n    connect(\n      pipe(\n        groupIndices,\n        filter((indexes) => indexes.length > 0),\n        withLatestFrom(sizes, gap),\n        map(([groupIndices2, sizes2, gap2]) => {\n          const groupOffsetTree = groupIndices2.reduce((tree, index, idx) => {\n            return insert(tree, index, offsetOf(index, sizes2.offsetTree, gap2) || idx);\n          }, newTree());\n          return {\n            ...sizes2,\n            groupIndices: groupIndices2,\n            groupOffsetTree\n          };\n        })\n      ),\n      sizes\n    );\n    connect(\n      pipe(\n        totalCount,\n        withLatestFrom(sizes),\n        filter(([totalCount2, { lastIndex }]) => {\n          return totalCount2 < lastIndex;\n        }),\n        map(([totalCount2, { lastIndex, lastSize }]) => {\n          return [\n            {\n              startIndex: totalCount2,\n              endIndex: lastIndex,\n              size: lastSize\n            }\n          ];\n        })\n      ),\n      sizeRanges\n    );\n    connect(fixedItemSize, defaultItemSize);\n    const trackItemSizes = statefulStreamFromEmitter(\n      pipe(\n        fixedItemSize,\n        map((size) => size === void 0)\n      ),\n      true\n    );\n    connect(\n      pipe(\n        defaultItemSize,\n        filter((value) => {\n          return value !== void 0 && empty(getValue(sizes).sizeTree);\n        }),\n        map((size) => [{ startIndex: 0, endIndex: 0, size }])\n      ),\n      sizeRanges\n    );\n    const listRefresh = streamFromEmitter(\n      pipe(\n        sizeRanges,\n        withLatestFrom(sizes),\n        scan(\n          ({ sizes: oldSizes }, [_, newSizes]) => {\n            return {\n              changed: newSizes !== oldSizes,\n              sizes: newSizes\n            };\n          },\n          { changed: false, sizes: initial }\n        ),\n        map((value) => value.changed)\n      )\n    );\n    subscribe(\n      pipe(\n        firstItemIndex,\n        scan(\n          (prev, next) => {\n            return { diff: prev.prev - next, prev: next };\n          },\n          { diff: 0, prev: 0 }\n        ),\n        map((val) => val.diff)\n      ),\n      (offset) => {\n        const { groupIndices: groupIndices2 } = getValue(sizes);\n        if (offset > 0) {\n          publish(recalcInProgress, true);\n          publish(unshiftWith, offset + affectedGroupCount(offset, groupIndices2));\n        } else if (offset < 0) {\n          const prevGroupIndicesValue = getValue(prevGroupIndices);\n          if (prevGroupIndicesValue.length > 0) {\n            offset -= affectedGroupCount(-offset, prevGroupIndicesValue);\n          }\n          publish(shiftWith, offset);\n        }\n      }\n    );\n    subscribe(pipe(firstItemIndex, withLatestFrom(log)), ([index, log2]) => {\n      if (index < 0) {\n        log2(\n          \"`firstItemIndex` prop should not be set to less than zero. If you don't know the total count, just use a very high value\",\n          { firstItemIndex },\n          LogLevel.ERROR\n        );\n      }\n    });\n    const beforeUnshiftWith = streamFromEmitter(unshiftWith);\n    connect(\n      pipe(\n        unshiftWith,\n        withLatestFrom(sizes),\n        map(([unshiftWith2, sizes2]) => {\n          const groupedMode = sizes2.groupIndices.length > 0;\n          const initialRanges = [];\n          const defaultSize = sizes2.lastSize;\n          if (groupedMode) {\n            const firstGroupSize = find(sizes2.sizeTree, 0);\n            let prependedGroupItemsCount = 0;\n            let groupIndex = 0;\n            while (prependedGroupItemsCount < unshiftWith2) {\n              const theGroupIndex = sizes2.groupIndices[groupIndex];\n              const groupItemCount = sizes2.groupIndices.length === groupIndex + 1 ? Infinity : sizes2.groupIndices[groupIndex + 1] - theGroupIndex - 1;\n              initialRanges.push({\n                startIndex: theGroupIndex,\n                endIndex: theGroupIndex,\n                size: firstGroupSize\n              });\n              initialRanges.push({\n                startIndex: theGroupIndex + 1,\n                endIndex: theGroupIndex + 1 + groupItemCount - 1,\n                size: defaultSize\n              });\n              groupIndex++;\n              prependedGroupItemsCount += groupItemCount + 1;\n            }\n            const sizeTreeKV = walk(sizes2.sizeTree);\n            const firstGroupIsExpanded = prependedGroupItemsCount !== unshiftWith2;\n            if (firstGroupIsExpanded) {\n              sizeTreeKV.shift();\n            }\n            return sizeTreeKV.reduce(\n              (acc, { k: index, v: size }) => {\n                let ranges = acc.ranges;\n                if (acc.prevSize !== 0) {\n                  ranges = [\n                    ...acc.ranges,\n                    {\n                      startIndex: acc.prevIndex,\n                      endIndex: index + unshiftWith2 - 1,\n                      size: acc.prevSize\n                    }\n                  ];\n                }\n                return {\n                  ranges,\n                  prevIndex: index + unshiftWith2,\n                  prevSize: size\n                };\n              },\n              {\n                ranges: initialRanges,\n                prevIndex: unshiftWith2,\n                prevSize: 0\n              }\n            ).ranges;\n          }\n          return walk(sizes2.sizeTree).reduce(\n            (acc, { k: index, v: size }) => {\n              return {\n                ranges: [...acc.ranges, { startIndex: acc.prevIndex, endIndex: index + unshiftWith2 - 1, size: acc.prevSize }],\n                prevIndex: index + unshiftWith2,\n                prevSize: size\n              };\n            },\n            {\n              ranges: [],\n              prevIndex: 0,\n              prevSize: defaultSize\n            }\n          ).ranges;\n        })\n      ),\n      sizeRanges\n    );\n    const shiftWithOffset = streamFromEmitter(\n      pipe(\n        shiftWith,\n        withLatestFrom(sizes, gap),\n        map(([shiftWith2, { offsetTree }, gap2]) => {\n          const newFirstItemIndex = -shiftWith2;\n          return offsetOf(newFirstItemIndex, offsetTree, gap2);\n        })\n      )\n    );\n    connect(\n      pipe(\n        shiftWith,\n        withLatestFrom(sizes, gap),\n        map(([shiftWith2, sizes2, gap2]) => {\n          const groupedMode = sizes2.groupIndices.length > 0;\n          if (groupedMode) {\n            if (empty(sizes2.sizeTree)) {\n              return sizes2;\n            }\n            let newSizeTree = newTree();\n            const prevGroupIndicesValue = getValue(prevGroupIndices);\n            let removedItemsCount = 0;\n            let groupIndex = 0;\n            let groupOffset = 0;\n            while (removedItemsCount < -shiftWith2) {\n              groupOffset = prevGroupIndicesValue[groupIndex];\n              const groupItemCount = prevGroupIndicesValue[groupIndex + 1] - groupOffset - 1;\n              groupIndex++;\n              removedItemsCount += groupItemCount + 1;\n            }\n            newSizeTree = walk(sizes2.sizeTree).reduce((acc, { k, v }) => {\n              return insert(acc, Math.max(0, k + shiftWith2), v);\n            }, newSizeTree);\n            const aGroupIsShrunk = removedItemsCount !== -shiftWith2;\n            if (aGroupIsShrunk) {\n              const firstGroupSize = find(sizes2.sizeTree, groupOffset);\n              newSizeTree = insert(newSizeTree, 0, firstGroupSize);\n              const nextItemSize = findMaxKeyValue(sizes2.sizeTree, -shiftWith2 + 1)[1];\n              newSizeTree = insert(newSizeTree, 1, nextItemSize);\n            }\n            return {\n              ...sizes2,\n              sizeTree: newSizeTree,\n              ...createOffsetTree(sizes2.offsetTree, 0, newSizeTree, gap2)\n            };\n          } else {\n            const newSizeTree = walk(sizes2.sizeTree).reduce((acc, { k, v }) => {\n              return insert(acc, Math.max(0, k + shiftWith2), v);\n            }, newTree());\n            return {\n              ...sizes2,\n              sizeTree: newSizeTree,\n              ...createOffsetTree(sizes2.offsetTree, 0, newSizeTree, gap2)\n            };\n          }\n        })\n      ),\n      sizes\n    );\n    return {\n      // input\n      data,\n      totalCount,\n      sizeRanges,\n      groupIndices,\n      defaultItemSize,\n      fixedItemSize,\n      unshiftWith,\n      shiftWith,\n      shiftWithOffset,\n      beforeUnshiftWith,\n      firstItemIndex,\n      gap,\n      // output\n      sizes,\n      listRefresh,\n      statefulTotalCount,\n      trackItemSizes,\n      itemSize\n    };\n  },\n  tup(loggerSystem, recalcSystem),\n  { singleton: true }\n);\nconst SUPPORTS_SCROLL_TO_OPTIONS = typeof document !== \"undefined\" && \"scrollBehavior\" in document.documentElement.style;\nfunction normalizeIndexLocation(location) {\n  const result = typeof location === \"number\" ? { index: location } : location;\n  if (!result.align) {\n    result.align = \"start\";\n  }\n  if (!result.behavior || !SUPPORTS_SCROLL_TO_OPTIONS) {\n    result.behavior = \"auto\";\n  }\n  if (!result.offset) {\n    result.offset = 0;\n  }\n  return result;\n}\nconst scrollToIndexSystem = system(\n  ([\n    { sizes, totalCount, listRefresh, gap },\n    {\n      scrollingInProgress,\n      viewportHeight,\n      scrollTo,\n      smoothScrollTargetReached,\n      headerHeight,\n      footerHeight,\n      fixedHeaderHeight,\n      fixedFooterHeight\n    },\n    { log }\n  ]) => {\n    const scrollToIndex = stream();\n    const scrollTargetReached = stream();\n    const topListHeight = statefulStream(0);\n    let unsubscribeNextListRefresh = null;\n    let cleartTimeoutRef = null;\n    let unsubscribeListRefresh = null;\n    function cleanup() {\n      if (unsubscribeNextListRefresh) {\n        unsubscribeNextListRefresh();\n        unsubscribeNextListRefresh = null;\n      }\n      if (unsubscribeListRefresh) {\n        unsubscribeListRefresh();\n        unsubscribeListRefresh = null;\n      }\n      if (cleartTimeoutRef) {\n        clearTimeout(cleartTimeoutRef);\n        cleartTimeoutRef = null;\n      }\n      publish(scrollingInProgress, false);\n    }\n    connect(\n      pipe(\n        scrollToIndex,\n        withLatestFrom(sizes, viewportHeight, totalCount, topListHeight, headerHeight, footerHeight, log),\n        withLatestFrom(gap, fixedHeaderHeight, fixedFooterHeight),\n        map(\n          ([\n            [location, sizes2, viewportHeight2, totalCount2, topListHeight2, headerHeight2, footerHeight2, log2],\n            gap2,\n            fixedHeaderHeight2,\n            fixedFooterHeight2\n          ]) => {\n            const normalLocation = normalizeIndexLocation(location);\n            const { align, behavior, offset } = normalLocation;\n            const lastIndex = totalCount2 - 1;\n            const index = originalIndexFromLocation(normalLocation, sizes2, lastIndex);\n            let top = offsetOf(index, sizes2.offsetTree, gap2) + headerHeight2;\n            if (align === \"end\") {\n              top += fixedHeaderHeight2 + findMaxKeyValue(sizes2.sizeTree, index)[1] - viewportHeight2 + fixedFooterHeight2;\n              if (index === lastIndex) {\n                top += footerHeight2;\n              }\n            } else if (align === \"center\") {\n              top += (fixedHeaderHeight2 + findMaxKeyValue(sizes2.sizeTree, index)[1] - viewportHeight2 + fixedFooterHeight2) / 2;\n            } else {\n              top -= topListHeight2;\n            }\n            if (offset) {\n              top += offset;\n            }\n            const retry = (listChanged) => {\n              cleanup();\n              if (listChanged) {\n                log2(\"retrying to scroll to\", { location }, LogLevel.DEBUG);\n                publish(scrollToIndex, location);\n              } else {\n                publish(scrollTargetReached, true);\n                log2(\"list did not change, scroll successful\", {}, LogLevel.DEBUG);\n              }\n            };\n            cleanup();\n            if (behavior === \"smooth\") {\n              let listChanged = false;\n              unsubscribeListRefresh = subscribe(listRefresh, (changed) => {\n                listChanged = listChanged || changed;\n              });\n              unsubscribeNextListRefresh = handleNext(smoothScrollTargetReached, () => {\n                retry(listChanged);\n              });\n            } else {\n              unsubscribeNextListRefresh = handleNext(pipe(listRefresh, watchChangesFor(150)), retry);\n            }\n            cleartTimeoutRef = setTimeout(() => {\n              cleanup();\n            }, 1200);\n            publish(scrollingInProgress, true);\n            log2(\"scrolling from index to\", { index, top, behavior }, LogLevel.DEBUG);\n            return { top, behavior };\n          }\n        )\n      ),\n      scrollTo\n    );\n    return {\n      scrollToIndex,\n      scrollTargetReached,\n      topListHeight\n    };\n  },\n  tup(sizeSystem, domIOSystem, loggerSystem),\n  { singleton: true }\n);\nfunction watchChangesFor(limit) {\n  return (done) => {\n    const timeoutRef = setTimeout(() => {\n      done(false);\n    }, limit);\n    return (value) => {\n      if (value) {\n        done(true);\n        clearTimeout(timeoutRef);\n      }\n    };\n  };\n}\nconst UP = \"up\";\nconst DOWN = \"down\";\nconst NONE$1 = \"none\";\nconst INITIAL_BOTTOM_STATE = {\n  atBottom: false,\n  notAtBottomBecause: \"NOT_SHOWING_LAST_ITEM\",\n  state: {\n    offsetBottom: 0,\n    scrollTop: 0,\n    viewportHeight: 0,\n    scrollHeight: 0\n  }\n};\nconst DEFAULT_AT_TOP_THRESHOLD = 0;\nconst stateFlagsSystem = system(([{ scrollContainerState, scrollTop, viewportHeight, headerHeight, footerHeight, scrollBy }]) => {\n  const isAtBottom = statefulStream(false);\n  const isAtTop = statefulStream(true);\n  const atBottomStateChange = stream();\n  const atTopStateChange = stream();\n  const atBottomThreshold = statefulStream(4);\n  const atTopThreshold = statefulStream(DEFAULT_AT_TOP_THRESHOLD);\n  const isScrolling = statefulStreamFromEmitter(\n    pipe(\n      merge(pipe(duc(scrollTop), skip(1), mapTo(true)), pipe(duc(scrollTop), skip(1), mapTo(false), debounceTime(100))),\n      distinctUntilChanged()\n    ),\n    false\n  );\n  const isScrollingBy = statefulStreamFromEmitter(\n    pipe(merge(pipe(scrollBy, mapTo(true)), pipe(scrollBy, mapTo(false), debounceTime(200))), distinctUntilChanged()),\n    false\n  );\n  connect(\n    pipe(\n      combineLatest(duc(scrollTop), duc(atTopThreshold)),\n      map(([top, atTopThreshold2]) => top <= atTopThreshold2),\n      distinctUntilChanged()\n    ),\n    isAtTop\n  );\n  connect(pipe(isAtTop, throttleTime(50)), atTopStateChange);\n  const atBottomState = streamFromEmitter(\n    pipe(\n      combineLatest(scrollContainerState, duc(viewportHeight), duc(headerHeight), duc(footerHeight), duc(atBottomThreshold)),\n      scan((current, [{ scrollTop: scrollTop2, scrollHeight }, viewportHeight2, _headerHeight, _footerHeight, atBottomThreshold2]) => {\n        const isAtBottom2 = scrollTop2 + viewportHeight2 - scrollHeight > -atBottomThreshold2;\n        const state = {\n          viewportHeight: viewportHeight2,\n          scrollTop: scrollTop2,\n          scrollHeight\n        };\n        if (isAtBottom2) {\n          let atBottomBecause;\n          let scrollTopDelta;\n          if (scrollTop2 > current.state.scrollTop) {\n            atBottomBecause = \"SCROLLED_DOWN\";\n            scrollTopDelta = current.state.scrollTop - scrollTop2;\n          } else {\n            atBottomBecause = \"SIZE_DECREASED\";\n            scrollTopDelta = current.state.scrollTop - scrollTop2 || current.scrollTopDelta;\n          }\n          return {\n            atBottom: true,\n            state,\n            atBottomBecause,\n            scrollTopDelta\n          };\n        }\n        let notAtBottomBecause;\n        if (state.scrollHeight > current.state.scrollHeight) {\n          notAtBottomBecause = \"SIZE_INCREASED\";\n        } else if (viewportHeight2 < current.state.viewportHeight) {\n          notAtBottomBecause = \"VIEWPORT_HEIGHT_DECREASING\";\n        } else if (scrollTop2 < current.state.scrollTop) {\n          notAtBottomBecause = \"SCROLLING_UPWARDS\";\n        } else {\n          notAtBottomBecause = \"NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM\";\n        }\n        return {\n          atBottom: false,\n          notAtBottomBecause,\n          state\n        };\n      }, INITIAL_BOTTOM_STATE),\n      distinctUntilChanged((prev, next) => {\n        return prev && prev.atBottom === next.atBottom;\n      })\n    )\n  );\n  const lastJumpDueToItemResize = statefulStreamFromEmitter(\n    pipe(\n      scrollContainerState,\n      scan(\n        (current, { scrollTop: scrollTop2, scrollHeight, viewportHeight: viewportHeight2 }) => {\n          if (!approximatelyEqual(current.scrollHeight, scrollHeight)) {\n            const atBottom = scrollHeight - (scrollTop2 + viewportHeight2) < 1;\n            if (current.scrollTop !== scrollTop2 && atBottom) {\n              return {\n                scrollHeight,\n                scrollTop: scrollTop2,\n                jump: current.scrollTop - scrollTop2,\n                changed: true\n              };\n            } else {\n              return {\n                scrollHeight,\n                scrollTop: scrollTop2,\n                jump: 0,\n                changed: true\n              };\n            }\n          } else {\n            return {\n              scrollTop: scrollTop2,\n              scrollHeight,\n              jump: 0,\n              changed: false\n            };\n          }\n        },\n        { scrollHeight: 0, jump: 0, scrollTop: 0, changed: false }\n      ),\n      filter((value) => value.changed),\n      map((value) => value.jump)\n    ),\n    0\n  );\n  connect(\n    pipe(\n      atBottomState,\n      map((state) => state.atBottom)\n    ),\n    isAtBottom\n  );\n  connect(pipe(isAtBottom, throttleTime(50)), atBottomStateChange);\n  const scrollDirection = statefulStream(DOWN);\n  connect(\n    pipe(\n      scrollContainerState,\n      map(({ scrollTop: scrollTop2 }) => scrollTop2),\n      distinctUntilChanged(),\n      scan(\n        (acc, scrollTop2) => {\n          if (getValue(isScrollingBy)) {\n            return { direction: acc.direction, prevScrollTop: scrollTop2 };\n          }\n          return { direction: scrollTop2 < acc.prevScrollTop ? UP : DOWN, prevScrollTop: scrollTop2 };\n        },\n        { direction: DOWN, prevScrollTop: 0 }\n      ),\n      map((value) => value.direction)\n    ),\n    scrollDirection\n  );\n  connect(pipe(scrollContainerState, throttleTime(50), mapTo(NONE$1)), scrollDirection);\n  const scrollVelocity = statefulStream(0);\n  connect(\n    pipe(\n      isScrolling,\n      filter((value) => !value),\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      mapTo(0)\n    ),\n    scrollVelocity\n  );\n  connect(\n    pipe(\n      scrollTop,\n      throttleTime(100),\n      withLatestFrom(isScrolling),\n      filter(([_, isScrolling2]) => !!isScrolling2),\n      scan(([_, prev], [next]) => [prev, next], [0, 0]),\n      map(([prev, next]) => next - prev)\n    ),\n    scrollVelocity\n  );\n  return {\n    isScrolling,\n    isAtTop,\n    isAtBottom,\n    atBottomState,\n    atTopStateChange,\n    atBottomStateChange,\n    scrollDirection,\n    atBottomThreshold,\n    atTopThreshold,\n    scrollVelocity,\n    lastJumpDueToItemResize\n  };\n}, tup(domIOSystem));\nconst propsReadySystem = system(\n  ([{ log }]) => {\n    const propsReady = statefulStream(false);\n    const didMount = streamFromEmitter(\n      pipe(\n        propsReady,\n        filter((ready) => ready),\n        distinctUntilChanged()\n      )\n    );\n    subscribe(propsReady, (value) => {\n      value && getValue(log)(\"props updated\", {}, LogLevel.DEBUG);\n    });\n    return { propsReady, didMount };\n  },\n  tup(loggerSystem),\n  { singleton: true }\n);\nfunction skipFrames(frameCount, callback) {\n  if (frameCount == 0) {\n    callback();\n  } else {\n    requestAnimationFrame(() => skipFrames(frameCount - 1, callback));\n  }\n}\nfunction getInitialTopMostItemIndexNumber(location, totalCount) {\n  const lastIndex = totalCount - 1;\n  const index = typeof location === \"number\" ? location : location.index === \"LAST\" ? lastIndex : location.index;\n  return index;\n}\nconst initialTopMostItemIndexSystem = system(\n  ([{ sizes, listRefresh, defaultItemSize }, { scrollTop }, { scrollToIndex, scrollTargetReached }, { didMount }]) => {\n    const scrolledToInitialItem = statefulStream(true);\n    const initialTopMostItemIndex = statefulStream(0);\n    const initialItemFinalLocationReached = statefulStream(true);\n    connect(\n      pipe(\n        didMount,\n        withLatestFrom(initialTopMostItemIndex),\n        filter(([_, location]) => !!location),\n        mapTo(false)\n      ),\n      scrolledToInitialItem\n    );\n    connect(\n      pipe(\n        didMount,\n        withLatestFrom(initialTopMostItemIndex),\n        filter(([_, location]) => !!location),\n        mapTo(false)\n      ),\n      initialItemFinalLocationReached\n    );\n    subscribe(\n      pipe(\n        combineLatest(listRefresh, didMount),\n        withLatestFrom(scrolledToInitialItem, sizes, defaultItemSize, initialItemFinalLocationReached),\n        filter(([[, didMount2], scrolledToInitialItem2, { sizeTree }, defaultItemSize2, scrollScheduled]) => {\n          return didMount2 && (!empty(sizeTree) || isDefined(defaultItemSize2)) && !scrolledToInitialItem2 && !scrollScheduled;\n        }),\n        withLatestFrom(initialTopMostItemIndex)\n      ),\n      ([, initialTopMostItemIndex2]) => {\n        handleNext(scrollTargetReached, () => {\n          publish(initialItemFinalLocationReached, true);\n        });\n        skipFrames(3, () => {\n          handleNext(scrollTop, () => {\n            publish(scrolledToInitialItem, true);\n          });\n          publish(scrollToIndex, initialTopMostItemIndex2);\n        });\n      }\n    );\n    return {\n      scrolledToInitialItem,\n      initialTopMostItemIndex,\n      initialItemFinalLocationReached\n    };\n  },\n  tup(sizeSystem, domIOSystem, scrollToIndexSystem, propsReadySystem),\n  { singleton: true }\n);\nfunction normalizeFollowOutput(follow) {\n  if (!follow) {\n    return false;\n  }\n  return follow === \"smooth\" ? \"smooth\" : \"auto\";\n}\nconst behaviorFromFollowOutput = (follow, isAtBottom) => {\n  if (typeof follow === \"function\") {\n    return normalizeFollowOutput(follow(isAtBottom));\n  }\n  return isAtBottom && normalizeFollowOutput(follow);\n};\nconst followOutputSystem = system(\n  ([\n    { totalCount, listRefresh },\n    { isAtBottom, atBottomState },\n    { scrollToIndex },\n    { scrolledToInitialItem },\n    { propsReady, didMount },\n    { log },\n    { scrollingInProgress }\n  ]) => {\n    const followOutput = statefulStream(false);\n    const autoscrollToBottom = stream();\n    let pendingScrollHandle = null;\n    function scrollToBottom(followOutputBehavior) {\n      publish(scrollToIndex, {\n        index: \"LAST\",\n        align: \"end\",\n        behavior: followOutputBehavior\n      });\n    }\n    subscribe(\n      pipe(\n        combineLatest(pipe(duc(totalCount), skip(1)), didMount),\n        withLatestFrom(duc(followOutput), isAtBottom, scrolledToInitialItem, scrollingInProgress),\n        map(([[totalCount2, didMount2], followOutput2, isAtBottom2, scrolledToInitialItem2, scrollingInProgress2]) => {\n          let shouldFollow = didMount2 && scrolledToInitialItem2;\n          let followOutputBehavior = \"auto\";\n          if (shouldFollow) {\n            followOutputBehavior = behaviorFromFollowOutput(followOutput2, isAtBottom2 || scrollingInProgress2);\n            shouldFollow = shouldFollow && !!followOutputBehavior;\n          }\n          return { totalCount: totalCount2, shouldFollow, followOutputBehavior };\n        }),\n        filter(({ shouldFollow }) => shouldFollow)\n      ),\n      ({ totalCount: totalCount2, followOutputBehavior }) => {\n        if (pendingScrollHandle) {\n          pendingScrollHandle();\n          pendingScrollHandle = null;\n        }\n        pendingScrollHandle = handleNext(listRefresh, () => {\n          getValue(log)(\"following output to \", { totalCount: totalCount2 }, LogLevel.DEBUG);\n          scrollToBottom(followOutputBehavior);\n          pendingScrollHandle = null;\n        });\n      }\n    );\n    function trapNextSizeIncrease(followOutput2) {\n      const cancel = handleNext(atBottomState, (state) => {\n        if (followOutput2 && !state.atBottom && state.notAtBottomBecause === \"SIZE_INCREASED\" && !pendingScrollHandle) {\n          getValue(log)(\"scrolling to bottom due to increased size\", {}, LogLevel.DEBUG);\n          scrollToBottom(\"auto\");\n        }\n      });\n      setTimeout(cancel, 100);\n    }\n    subscribe(\n      pipe(\n        combineLatest(duc(followOutput), totalCount, propsReady),\n        filter(([follow, , ready]) => follow && ready),\n        scan(\n          ({ value }, [, next]) => {\n            return { refreshed: value === next, value: next };\n          },\n          { refreshed: false, value: 0 }\n        ),\n        filter(({ refreshed }) => refreshed),\n        withLatestFrom(followOutput, totalCount)\n      ),\n      ([, followOutput2]) => {\n        if (getValue(scrolledToInitialItem)) {\n          trapNextSizeIncrease(followOutput2 !== false);\n        }\n      }\n    );\n    subscribe(autoscrollToBottom, () => {\n      trapNextSizeIncrease(getValue(followOutput) !== false);\n    });\n    subscribe(combineLatest(duc(followOutput), atBottomState), ([followOutput2, state]) => {\n      if (followOutput2 && !state.atBottom && state.notAtBottomBecause === \"VIEWPORT_HEIGHT_DECREASING\") {\n        scrollToBottom(\"auto\");\n      }\n    });\n    return { followOutput, autoscrollToBottom };\n  },\n  tup(sizeSystem, stateFlagsSystem, scrollToIndexSystem, initialTopMostItemIndexSystem, propsReadySystem, loggerSystem, domIOSystem)\n);\nfunction groupCountsToIndicesAndCount(counts) {\n  return counts.reduce(\n    (acc, groupCount) => {\n      acc.groupIndices.push(acc.totalCount);\n      acc.totalCount += groupCount + 1;\n      return acc;\n    },\n    {\n      totalCount: 0,\n      groupIndices: []\n    }\n  );\n}\nconst groupedListSystem = system(([{ totalCount, groupIndices, sizes }, { scrollTop, headerHeight }]) => {\n  const groupCounts = stream();\n  const topItemsIndexes = stream();\n  const groupIndicesAndCount = streamFromEmitter(pipe(groupCounts, map(groupCountsToIndicesAndCount)));\n  connect(\n    pipe(\n      groupIndicesAndCount,\n      map((value) => value.totalCount)\n    ),\n    totalCount\n  );\n  connect(\n    pipe(\n      groupIndicesAndCount,\n      map((value) => value.groupIndices)\n    ),\n    groupIndices\n  );\n  connect(\n    pipe(\n      combineLatest(scrollTop, sizes, headerHeight),\n      filter(([_, sizes2]) => hasGroups(sizes2)),\n      map(([scrollTop2, state, headerHeight2]) => findMaxKeyValue(state.groupOffsetTree, Math.max(scrollTop2 - headerHeight2, 0), \"v\")[0]),\n      distinctUntilChanged(),\n      map((index) => [index])\n    ),\n    topItemsIndexes\n  );\n  return { groupCounts, topItemsIndexes };\n}, tup(sizeSystem, domIOSystem));\nfunction tupleComparator(prev, current) {\n  return !!(prev && prev[0] === current[0] && prev[1] === current[1]);\n}\nfunction rangeComparator(prev, next) {\n  return !!(prev && prev.startIndex === next.startIndex && prev.endIndex === next.endIndex);\n}\nconst TOP = \"top\";\nconst BOTTOM = \"bottom\";\nconst NONE = \"none\";\nfunction getOverscan(overscan, end, direction) {\n  if (typeof overscan === \"number\") {\n    return direction === UP && end === TOP || direction === DOWN && end === BOTTOM ? overscan : 0;\n  } else {\n    if (direction === UP) {\n      return end === TOP ? overscan.main : overscan.reverse;\n    } else {\n      return end === BOTTOM ? overscan.main : overscan.reverse;\n    }\n  }\n}\nfunction getViewportIncrease(value, end) {\n  return typeof value === \"number\" ? value : value[end] || 0;\n}\nconst sizeRangeSystem = system(\n  ([{ scrollTop, viewportHeight, deviation, headerHeight, fixedHeaderHeight }]) => {\n    const listBoundary = stream();\n    const topListHeight = statefulStream(0);\n    const increaseViewportBy = statefulStream(0);\n    const overscan = statefulStream(0);\n    const visibleRange = statefulStreamFromEmitter(\n      pipe(\n        combineLatest(\n          duc(scrollTop),\n          duc(viewportHeight),\n          duc(headerHeight),\n          duc(listBoundary, tupleComparator),\n          duc(overscan),\n          duc(topListHeight),\n          duc(fixedHeaderHeight),\n          duc(deviation),\n          duc(increaseViewportBy)\n        ),\n        map(\n          ([\n            scrollTop2,\n            viewportHeight2,\n            headerHeight2,\n            [listTop, listBottom],\n            overscan2,\n            topListHeight2,\n            fixedHeaderHeight2,\n            deviation2,\n            increaseViewportBy2\n          ]) => {\n            const top = scrollTop2 - deviation2;\n            const stickyHeaderHeight = topListHeight2 + fixedHeaderHeight2;\n            const headerVisible = Math.max(headerHeight2 - top, 0);\n            let direction = NONE;\n            const topViewportAddition = getViewportIncrease(increaseViewportBy2, TOP);\n            const bottomViewportAddition = getViewportIncrease(increaseViewportBy2, BOTTOM);\n            listTop -= deviation2;\n            listTop += headerHeight2 + fixedHeaderHeight2;\n            listBottom += headerHeight2 + fixedHeaderHeight2;\n            listBottom -= deviation2;\n            if (listTop > scrollTop2 + stickyHeaderHeight - topViewportAddition) {\n              direction = UP;\n            }\n            if (listBottom < scrollTop2 - headerVisible + viewportHeight2 + bottomViewportAddition) {\n              direction = DOWN;\n            }\n            if (direction !== NONE) {\n              return [\n                Math.max(top - headerHeight2 - getOverscan(overscan2, TOP, direction) - topViewportAddition, 0),\n                top - headerVisible - fixedHeaderHeight2 + viewportHeight2 + getOverscan(overscan2, BOTTOM, direction) + bottomViewportAddition\n              ];\n            }\n            return null;\n          }\n        ),\n        filter((value) => value != null),\n        distinctUntilChanged(tupleComparator)\n      ),\n      [0, 0]\n    );\n    return {\n      // input\n      listBoundary,\n      overscan,\n      topListHeight,\n      increaseViewportBy,\n      // output\n      visibleRange\n    };\n  },\n  tup(domIOSystem),\n  { singleton: true }\n);\nfunction probeItemSet(index, sizes, data) {\n  if (hasGroups(sizes)) {\n    const itemIndex = originalIndexFromItemIndex(index, sizes);\n    const groupIndex = findMaxKeyValue(sizes.groupOffsetTree, itemIndex)[0];\n    return [\n      { index: groupIndex, size: 0, offset: 0 },\n      { index: itemIndex, size: 0, offset: 0, data: data && data[0] }\n    ];\n  }\n  return [{ index, size: 0, offset: 0, data: data && data[0] }];\n}\nconst EMPTY_LIST_STATE = {\n  items: [],\n  topItems: [],\n  offsetTop: 0,\n  offsetBottom: 0,\n  top: 0,\n  bottom: 0,\n  topListHeight: 0,\n  totalCount: 0,\n  firstItemIndex: 0\n};\nfunction transposeItems(items, sizes, firstItemIndex) {\n  if (items.length === 0) {\n    return [];\n  }\n  if (!hasGroups(sizes)) {\n    return items.map((item) => ({ ...item, index: item.index + firstItemIndex, originalIndex: item.index }));\n  }\n  const startIndex = items[0].index;\n  const endIndex = items[items.length - 1].index;\n  const transposedItems = [];\n  const groupRanges = rangesWithin(sizes.groupOffsetTree, startIndex, endIndex);\n  let currentRange = void 0;\n  let currentGroupIndex = 0;\n  for (const item of items) {\n    if (!currentRange || currentRange.end < item.index) {\n      currentRange = groupRanges.shift();\n      currentGroupIndex = sizes.groupIndices.indexOf(currentRange.start);\n    }\n    let transposedItem;\n    if (item.index === currentRange.start) {\n      transposedItem = {\n        type: \"group\",\n        index: currentGroupIndex\n      };\n    } else {\n      transposedItem = {\n        index: item.index - (currentGroupIndex + 1) + firstItemIndex,\n        groupIndex: currentGroupIndex\n      };\n    }\n    transposedItems.push({\n      ...transposedItem,\n      size: item.size,\n      offset: item.offset,\n      originalIndex: item.index,\n      data: item.data\n    });\n  }\n  return transposedItems;\n}\nfunction buildListState(items, topItems, totalCount, gap, sizes, firstItemIndex) {\n  const { lastSize, lastOffset, lastIndex } = sizes;\n  let offsetTop = 0;\n  let bottom = 0;\n  if (items.length > 0) {\n    offsetTop = items[0].offset;\n    const lastItem = items[items.length - 1];\n    bottom = lastItem.offset + lastItem.size;\n  }\n  const itemCount = totalCount - lastIndex;\n  const total = lastOffset + itemCount * lastSize + (itemCount - 1) * gap;\n  const top = offsetTop;\n  const offsetBottom = total - bottom;\n  return {\n    items: transposeItems(items, sizes, firstItemIndex),\n    topItems: transposeItems(topItems, sizes, firstItemIndex),\n    topListHeight: topItems.reduce((height, item) => item.size + height, 0),\n    offsetTop,\n    offsetBottom,\n    top,\n    bottom,\n    totalCount,\n    firstItemIndex\n  };\n}\nfunction buildListStateFromItemCount(itemCount, initialTopMostItemIndex, sizes, firstItemIndex, gap, data) {\n  let includedGroupsCount = 0;\n  if (sizes.groupIndices.length > 0) {\n    for (const index of sizes.groupIndices) {\n      if (index - includedGroupsCount >= itemCount) {\n        break;\n      }\n      includedGroupsCount++;\n    }\n  }\n  const adjustedCount = itemCount + includedGroupsCount;\n  const initialTopMostItemIndexNumber = getInitialTopMostItemIndexNumber(initialTopMostItemIndex, adjustedCount);\n  const items = Array.from({ length: adjustedCount }).map((_, index) => ({\n    index: index + initialTopMostItemIndexNumber,\n    size: 0,\n    offset: 0,\n    data: data[index + initialTopMostItemIndexNumber]\n  }));\n  return buildListState(items, [], adjustedCount, gap, sizes, firstItemIndex);\n}\nconst listStateSystem = system(\n  ([\n    { sizes, totalCount, data, firstItemIndex, gap },\n    groupedListSystem2,\n    { visibleRange, listBoundary, topListHeight: rangeTopListHeight },\n    { scrolledToInitialItem, initialTopMostItemIndex },\n    { topListHeight },\n    stateFlags,\n    { didMount },\n    { recalcInProgress }\n  ]) => {\n    const topItemsIndexes = statefulStream([]);\n    const initialItemCount = statefulStream(0);\n    const itemsRendered = stream();\n    connect(groupedListSystem2.topItemsIndexes, topItemsIndexes);\n    const listState = statefulStreamFromEmitter(\n      pipe(\n        combineLatest(\n          didMount,\n          recalcInProgress,\n          duc(visibleRange, tupleComparator),\n          duc(totalCount),\n          duc(sizes),\n          duc(initialTopMostItemIndex),\n          scrolledToInitialItem,\n          duc(topItemsIndexes),\n          duc(firstItemIndex),\n          duc(gap),\n          data\n        ),\n        filter(([mount, recalcInProgress2, , totalCount2, , , , , , , data2]) => {\n          const dataChangeInProgress = data2 && data2.length !== totalCount2;\n          return mount && !recalcInProgress2 && !dataChangeInProgress;\n        }),\n        map(\n          ([\n            ,\n            ,\n            [startOffset, endOffset],\n            totalCount2,\n            sizes2,\n            initialTopMostItemIndex2,\n            scrolledToInitialItem2,\n            topItemsIndexes2,\n            firstItemIndex2,\n            gap2,\n            data2\n          ]) => {\n            const sizesValue = sizes2;\n            const { sizeTree, offsetTree } = sizesValue;\n            const initialItemCountValue = getValue(initialItemCount);\n            if (totalCount2 === 0) {\n              return { ...EMPTY_LIST_STATE, totalCount: totalCount2 };\n            }\n            if (startOffset === 0 && endOffset === 0) {\n              if (initialItemCountValue === 0) {\n                return { ...EMPTY_LIST_STATE, totalCount: totalCount2 };\n              } else {\n                return buildListStateFromItemCount(initialItemCountValue, initialTopMostItemIndex2, sizes2, firstItemIndex2, gap2, data2 || []);\n              }\n            }\n            if (empty(sizeTree)) {\n              if (initialItemCountValue > 0) {\n                return null;\n              }\n              const state = buildListState(\n                probeItemSet(getInitialTopMostItemIndexNumber(initialTopMostItemIndex2, totalCount2), sizesValue, data2),\n                [],\n                totalCount2,\n                gap2,\n                sizesValue,\n                firstItemIndex2\n              );\n              return state;\n            }\n            const topItems = [];\n            if (topItemsIndexes2.length > 0) {\n              const startIndex = topItemsIndexes2[0];\n              const endIndex = topItemsIndexes2[topItemsIndexes2.length - 1];\n              let offset = 0;\n              for (const range of rangesWithin(sizeTree, startIndex, endIndex)) {\n                const size = range.value;\n                const rangeStartIndex = Math.max(range.start, startIndex);\n                const rangeEndIndex = Math.min(range.end, endIndex);\n                for (let i = rangeStartIndex; i <= rangeEndIndex; i++) {\n                  topItems.push({ index: i, size, offset, data: data2 && data2[i] });\n                  offset += size;\n                }\n              }\n            }\n            if (!scrolledToInitialItem2) {\n              return buildListState([], topItems, totalCount2, gap2, sizesValue, firstItemIndex2);\n            }\n            const minStartIndex = topItemsIndexes2.length > 0 ? topItemsIndexes2[topItemsIndexes2.length - 1] + 1 : 0;\n            const offsetPointRanges = rangesWithinOffsets(offsetTree, startOffset, endOffset, minStartIndex);\n            if (offsetPointRanges.length === 0) {\n              return null;\n            }\n            const maxIndex = totalCount2 - 1;\n            const items = tap([], (result) => {\n              for (const range of offsetPointRanges) {\n                const point = range.value;\n                let offset = point.offset;\n                let rangeStartIndex = range.start;\n                const size = point.size;\n                if (point.offset < startOffset) {\n                  rangeStartIndex += Math.floor((startOffset - point.offset + gap2) / (size + gap2));\n                  const itemCount = rangeStartIndex - range.start;\n                  offset += itemCount * size + itemCount * gap2;\n                }\n                if (rangeStartIndex < minStartIndex) {\n                  offset += (minStartIndex - rangeStartIndex) * size;\n                  rangeStartIndex = minStartIndex;\n                }\n                const endIndex = Math.min(range.end, maxIndex);\n                for (let i = rangeStartIndex; i <= endIndex; i++) {\n                  if (offset >= endOffset) {\n                    break;\n                  }\n                  result.push({ index: i, size, offset, data: data2 && data2[i] });\n                  offset += size + gap2;\n                }\n              }\n            });\n            return buildListState(items, topItems, totalCount2, gap2, sizesValue, firstItemIndex2);\n          }\n        ),\n        //@ts-expect-error filter needs to be fixed\n        filter((value) => value !== null),\n        distinctUntilChanged()\n      ),\n      EMPTY_LIST_STATE\n    );\n    connect(\n      pipe(\n        data,\n        filter(isDefined),\n        map((data2) => data2 == null ? void 0 : data2.length)\n      ),\n      totalCount\n    );\n    connect(\n      pipe(\n        listState,\n        map((value) => value.topListHeight)\n      ),\n      topListHeight\n    );\n    connect(topListHeight, rangeTopListHeight);\n    connect(\n      pipe(\n        listState,\n        map((state) => [state.top, state.bottom])\n      ),\n      listBoundary\n    );\n    connect(\n      pipe(\n        listState,\n        map((state) => state.items)\n      ),\n      itemsRendered\n    );\n    const endReached = streamFromEmitter(\n      pipe(\n        listState,\n        filter(({ items }) => items.length > 0),\n        withLatestFrom(totalCount, data),\n        filter(([{ items }, totalCount2]) => items[items.length - 1].originalIndex === totalCount2 - 1),\n        map(([, totalCount2, data2]) => [totalCount2 - 1, data2]),\n        distinctUntilChanged(tupleComparator),\n        map(([count]) => count)\n      )\n    );\n    const startReached = streamFromEmitter(\n      pipe(\n        listState,\n        throttleTime(200),\n        filter(({ items, topItems }) => {\n          return items.length > 0 && items[0].originalIndex === topItems.length;\n        }),\n        map(({ items }) => items[0].index),\n        distinctUntilChanged()\n      )\n    );\n    const rangeChanged = streamFromEmitter(\n      pipe(\n        listState,\n        filter(({ items }) => items.length > 0),\n        map(({ items }) => {\n          let startIndex = 0;\n          let endIndex = items.length - 1;\n          while (items[startIndex].type === \"group\" && startIndex < endIndex) {\n            startIndex++;\n          }\n          while (items[endIndex].type === \"group\" && endIndex > startIndex) {\n            endIndex--;\n          }\n          return {\n            startIndex: items[startIndex].index,\n            endIndex: items[endIndex].index\n          };\n        }),\n        distinctUntilChanged(rangeComparator)\n      )\n    );\n    return { listState, topItemsIndexes, endReached, startReached, rangeChanged, itemsRendered, initialItemCount, ...stateFlags };\n  },\n  tup(\n    sizeSystem,\n    groupedListSystem,\n    sizeRangeSystem,\n    initialTopMostItemIndexSystem,\n    scrollToIndexSystem,\n    stateFlagsSystem,\n    propsReadySystem,\n    recalcSystem\n  ),\n  { singleton: true }\n);\nconst initialItemCountSystem = system(\n  ([{ sizes, firstItemIndex, data, gap }, { initialTopMostItemIndex }, { initialItemCount, listState }, { didMount }]) => {\n    connect(\n      pipe(\n        didMount,\n        withLatestFrom(initialItemCount),\n        filter(([, count]) => count !== 0),\n        withLatestFrom(initialTopMostItemIndex, sizes, firstItemIndex, gap, data),\n        map(([[, count], initialTopMostItemIndexValue, sizes2, firstItemIndex2, gap2, data2 = []]) => {\n          return buildListStateFromItemCount(count, initialTopMostItemIndexValue, sizes2, firstItemIndex2, gap2, data2);\n        })\n      ),\n      listState\n    );\n    return {};\n  },\n  tup(sizeSystem, initialTopMostItemIndexSystem, listStateSystem, propsReadySystem),\n  { singleton: true }\n);\nconst scrollSeekSystem = system(\n  ([{ scrollVelocity }]) => {\n    const isSeeking = statefulStream(false);\n    const rangeChanged = stream();\n    const scrollSeekConfiguration = statefulStream(false);\n    connect(\n      pipe(\n        scrollVelocity,\n        withLatestFrom(scrollSeekConfiguration, isSeeking, rangeChanged),\n        filter(([_, config]) => !!config),\n        map(([speed, config, isSeeking2, range]) => {\n          const { exit, enter } = config;\n          if (isSeeking2) {\n            if (exit(speed, range)) {\n              return false;\n            }\n          } else {\n            if (enter(speed, range)) {\n              return true;\n            }\n          }\n          return isSeeking2;\n        }),\n        distinctUntilChanged()\n      ),\n      isSeeking\n    );\n    subscribe(\n      pipe(combineLatest(isSeeking, scrollVelocity, rangeChanged), withLatestFrom(scrollSeekConfiguration)),\n      ([[isSeeking2, velocity, range], config]) => isSeeking2 && config && config.change && config.change(velocity, range)\n    );\n    return { isSeeking, scrollSeekConfiguration, scrollVelocity, scrollSeekRangeChanged: rangeChanged };\n  },\n  tup(stateFlagsSystem),\n  { singleton: true }\n);\nconst topItemCountSystem = system(([{ topItemsIndexes }]) => {\n  const topItemCount = statefulStream(0);\n  connect(\n    pipe(\n      topItemCount,\n      filter((length) => length > 0),\n      map((length) => Array.from({ length }).map((_, index) => index))\n    ),\n    topItemsIndexes\n  );\n  return { topItemCount };\n}, tup(listStateSystem));\nconst totalListHeightSystem = system(\n  ([{ footerHeight, headerHeight, fixedHeaderHeight, fixedFooterHeight }, { listState }]) => {\n    const totalListHeightChanged = stream();\n    const totalListHeight = statefulStreamFromEmitter(\n      pipe(\n        combineLatest(footerHeight, fixedFooterHeight, headerHeight, fixedHeaderHeight, listState),\n        map(([footerHeight2, fixedFooterHeight2, headerHeight2, fixedHeaderHeight2, listState2]) => {\n          return footerHeight2 + fixedFooterHeight2 + headerHeight2 + fixedHeaderHeight2 + listState2.offsetBottom + listState2.bottom;\n        })\n      ),\n      0\n    );\n    connect(duc(totalListHeight), totalListHeightChanged);\n    return { totalListHeight, totalListHeightChanged };\n  },\n  tup(domIOSystem, listStateSystem),\n  { singleton: true }\n);\nfunction simpleMemoize(func) {\n  let called = false;\n  let result;\n  return () => {\n    if (!called) {\n      called = true;\n      result = func();\n    }\n    return result;\n  };\n}\nconst isMobileSafari = simpleMemoize(() => {\n  return /iP(ad|od|hone)/i.test(navigator.userAgent) && /WebKit/i.test(navigator.userAgent);\n});\nconst upwardScrollFixSystem = system(\n  ([\n    { scrollBy, scrollTop, deviation, scrollingInProgress },\n    { isScrolling, isAtBottom, scrollDirection, lastJumpDueToItemResize },\n    { listState },\n    { beforeUnshiftWith, shiftWithOffset, sizes, gap },\n    { log },\n    { recalcInProgress }\n  ]) => {\n    const deviationOffset = streamFromEmitter(\n      pipe(\n        listState,\n        withLatestFrom(lastJumpDueToItemResize),\n        scan(\n          ([, prevItems, prevTotalCount, prevTotalHeight], [{ items, totalCount, bottom, offsetBottom }, lastJumpDueToItemResize2]) => {\n            const totalHeight = bottom + offsetBottom;\n            let newDev = 0;\n            if (prevTotalCount === totalCount) {\n              if (prevItems.length > 0 && items.length > 0) {\n                const atStart = items[0].originalIndex === 0 && prevItems[0].originalIndex === 0;\n                if (!atStart) {\n                  newDev = totalHeight - prevTotalHeight;\n                  if (newDev !== 0) {\n                    newDev += lastJumpDueToItemResize2;\n                  }\n                }\n              }\n            }\n            return [newDev, items, totalCount, totalHeight];\n          },\n          [0, [], 0, 0]\n        ),\n        filter(([amount]) => amount !== 0),\n        withLatestFrom(scrollTop, scrollDirection, scrollingInProgress, isAtBottom, log, recalcInProgress),\n        filter(([, scrollTop2, scrollDirection2, scrollingInProgress2, , , recalcInProgress2]) => {\n          return !recalcInProgress2 && !scrollingInProgress2 && scrollTop2 !== 0 && scrollDirection2 === UP;\n        }),\n        map(([[amount], , , , , log2]) => {\n          log2(\"Upward scrolling compensation\", { amount }, LogLevel.DEBUG);\n          return amount;\n        })\n      )\n    );\n    function scrollByWith(offset) {\n      if (offset > 0) {\n        publish(scrollBy, { top: -offset, behavior: \"auto\" });\n        publish(deviation, 0);\n      } else {\n        publish(deviation, 0);\n        publish(scrollBy, { top: -offset, behavior: \"auto\" });\n      }\n    }\n    subscribe(pipe(deviationOffset, withLatestFrom(deviation, isScrolling)), ([offset, deviationAmount, isScrolling2]) => {\n      if (isScrolling2 && isMobileSafari()) {\n        publish(deviation, deviationAmount - offset);\n      } else {\n        scrollByWith(-offset);\n      }\n    });\n    subscribe(\n      pipe(\n        combineLatest(statefulStreamFromEmitter(isScrolling, false), deviation, recalcInProgress),\n        filter(([is, deviation2, recalc]) => !is && !recalc && deviation2 !== 0),\n        map(([_, deviation2]) => deviation2),\n        throttleTime(1)\n      ),\n      scrollByWith\n    );\n    connect(\n      pipe(\n        shiftWithOffset,\n        map((offset) => {\n          return { top: -offset };\n        })\n      ),\n      scrollBy\n    );\n    subscribe(\n      pipe(\n        beforeUnshiftWith,\n        withLatestFrom(sizes, gap),\n        map(([offset, { lastSize: defaultItemSize, groupIndices, sizeTree }, gap2]) => {\n          function getItemOffset(itemCount) {\n            return itemCount * (defaultItemSize + gap2);\n          }\n          if (groupIndices.length === 0) {\n            return getItemOffset(offset);\n          } else {\n            let amount = 0;\n            const defaultGroupSize = find(sizeTree, 0);\n            let recognizedOffsetItems = 0;\n            let groupIndex = 0;\n            while (recognizedOffsetItems < offset) {\n              recognizedOffsetItems++;\n              amount += defaultGroupSize;\n              let groupItemCount = groupIndices.length === groupIndex + 1 ? Infinity : groupIndices[groupIndex + 1] - groupIndices[groupIndex] - 1;\n              if (recognizedOffsetItems + groupItemCount > offset) {\n                amount -= defaultGroupSize;\n                groupItemCount = offset - recognizedOffsetItems + 1;\n              }\n              recognizedOffsetItems += groupItemCount;\n              amount += getItemOffset(groupItemCount);\n              groupIndex++;\n            }\n            return amount;\n          }\n        })\n      ),\n      (offset) => {\n        publish(deviation, offset);\n        requestAnimationFrame(() => {\n          publish(scrollBy, { top: offset });\n          requestAnimationFrame(() => {\n            publish(deviation, 0);\n            publish(recalcInProgress, false);\n          });\n        });\n      }\n    );\n    return { deviation };\n  },\n  tup(domIOSystem, stateFlagsSystem, listStateSystem, sizeSystem, loggerSystem, recalcSystem)\n);\nconst initialScrollTopSystem = system(\n  ([{ didMount }, { scrollTo }, { listState }]) => {\n    const initialScrollTop = statefulStream(0);\n    subscribe(\n      pipe(\n        didMount,\n        withLatestFrom(initialScrollTop),\n        filter(([, offset]) => offset !== 0),\n        map(([, offset]) => ({ top: offset }))\n      ),\n      (location) => {\n        handleNext(\n          pipe(\n            listState,\n            skip(1),\n            filter((state) => state.items.length > 1)\n          ),\n          () => {\n            requestAnimationFrame(() => {\n              publish(scrollTo, location);\n            });\n          }\n        );\n      }\n    );\n    return {\n      initialScrollTop\n    };\n  },\n  tup(propsReadySystem, domIOSystem, listStateSystem),\n  { singleton: true }\n);\nconst alignToBottomSystem = system(\n  ([{ viewportHeight }, { totalListHeight }]) => {\n    const alignToBottom = statefulStream(false);\n    const paddingTopAddition = statefulStreamFromEmitter(\n      pipe(\n        combineLatest(alignToBottom, viewportHeight, totalListHeight),\n        filter(([enabled]) => enabled),\n        map(([, viewportHeight2, totalListHeight2]) => {\n          return Math.max(0, viewportHeight2 - totalListHeight2);\n        }),\n        throttleTime(0),\n        distinctUntilChanged()\n      ),\n      0\n    );\n    return { alignToBottom, paddingTopAddition };\n  },\n  tup(domIOSystem, totalListHeightSystem),\n  { singleton: true }\n);\nconst windowScrollerSystem = system(([{ scrollTo, scrollContainerState }]) => {\n  const windowScrollContainerState = stream();\n  const windowViewportRect = stream();\n  const windowScrollTo = stream();\n  const useWindowScroll = statefulStream(false);\n  const customScrollParent = statefulStream(void 0);\n  connect(\n    pipe(\n      combineLatest(windowScrollContainerState, windowViewportRect),\n      map(([{ viewportHeight, scrollTop: windowScrollTop, scrollHeight }, { offsetTop }]) => {\n        return {\n          scrollTop: Math.max(0, windowScrollTop - offsetTop),\n          scrollHeight,\n          viewportHeight\n        };\n      })\n    ),\n    scrollContainerState\n  );\n  connect(\n    pipe(\n      scrollTo,\n      withLatestFrom(windowViewportRect),\n      map(([scrollTo2, { offsetTop }]) => {\n        return {\n          ...scrollTo2,\n          top: scrollTo2.top + offsetTop\n        };\n      })\n    ),\n    windowScrollTo\n  );\n  return {\n    // config\n    useWindowScroll,\n    customScrollParent,\n    // input\n    windowScrollContainerState,\n    windowViewportRect,\n    // signals\n    windowScrollTo\n  };\n}, tup(domIOSystem));\nconst defaultCalculateViewLocation = ({\n  itemTop: itemTop2,\n  itemBottom,\n  viewportTop,\n  viewportBottom,\n  locationParams: { behavior, align, ...rest }\n}) => {\n  if (itemTop2 < viewportTop) {\n    return { ...rest, behavior, align: align != null ? align : \"start\" };\n  }\n  if (itemBottom > viewportBottom) {\n    return { ...rest, behavior, align: align != null ? align : \"end\" };\n  }\n  return null;\n};\nconst scrollIntoViewSystem = system(\n  ([\n    { sizes, totalCount, gap },\n    { scrollTop, viewportHeight, headerHeight, fixedHeaderHeight, fixedFooterHeight, scrollingInProgress },\n    { scrollToIndex }\n  ]) => {\n    const scrollIntoView = stream();\n    connect(\n      pipe(\n        scrollIntoView,\n        withLatestFrom(sizes, viewportHeight, totalCount, headerHeight, fixedHeaderHeight, fixedFooterHeight, scrollTop),\n        withLatestFrom(gap),\n        map(([[viewLocation, sizes2, viewportHeight2, totalCount2, headerHeight2, fixedHeaderHeight2, fixedFooterHeight2, scrollTop2], gap2]) => {\n          const { done, behavior, align, calculateViewLocation = defaultCalculateViewLocation, ...rest } = viewLocation;\n          const actualIndex = originalIndexFromLocation(viewLocation, sizes2, totalCount2 - 1);\n          const itemTop2 = offsetOf(actualIndex, sizes2.offsetTree, gap2) + headerHeight2 + fixedHeaderHeight2;\n          const itemBottom = itemTop2 + findMaxKeyValue(sizes2.sizeTree, actualIndex)[1];\n          const viewportTop = scrollTop2 + fixedHeaderHeight2;\n          const viewportBottom = scrollTop2 + viewportHeight2 - fixedFooterHeight2;\n          const location = calculateViewLocation({\n            itemTop: itemTop2,\n            itemBottom,\n            viewportTop,\n            viewportBottom,\n            locationParams: { behavior, align, ...rest }\n          });\n          if (location) {\n            done && handleNext(\n              pipe(\n                scrollingInProgress,\n                filter((value) => value === false),\n                // skips the initial publish of false, and the cleanup call.\n                // but if scrollingInProgress is true, we skip the initial publish.\n                skip(getValue(scrollingInProgress) ? 1 : 2)\n              ),\n              done\n            );\n          } else {\n            done && done();\n          }\n          return location;\n        }),\n        filter((value) => value !== null)\n      ),\n      scrollToIndex\n    );\n    return {\n      scrollIntoView\n    };\n  },\n  tup(sizeSystem, domIOSystem, scrollToIndexSystem, listStateSystem, loggerSystem),\n  { singleton: true }\n);\nconst stateLoadSystem = system(\n  ([\n    { sizes, sizeRanges },\n    { scrollTop },\n    { initialTopMostItemIndex },\n    { didMount },\n    { useWindowScroll, windowScrollContainerState, windowViewportRect }\n  ]) => {\n    const getState = stream();\n    const restoreStateFrom = statefulStream(void 0);\n    const statefulWindowScrollContainerState = statefulStream(null);\n    const statefulWindowViewportRect = statefulStream(null);\n    connect(windowScrollContainerState, statefulWindowScrollContainerState);\n    connect(windowViewportRect, statefulWindowViewportRect);\n    subscribe(\n      pipe(getState, withLatestFrom(sizes, scrollTop, useWindowScroll, statefulWindowScrollContainerState, statefulWindowViewportRect)),\n      ([callback, sizes2, scrollTop2, useWindowScroll2, windowScrollContainerState2, windowViewportRect2]) => {\n        const ranges = sizeTreeToRanges(sizes2.sizeTree);\n        if (useWindowScroll2 && windowScrollContainerState2 !== null && windowViewportRect2 !== null) {\n          scrollTop2 = windowScrollContainerState2.scrollTop - windowViewportRect2.offsetTop;\n        }\n        callback({ ranges, scrollTop: scrollTop2 });\n      }\n    );\n    connect(pipe(restoreStateFrom, filter(isDefined), map(locationFromSnapshot)), initialTopMostItemIndex);\n    connect(\n      pipe(\n        didMount,\n        withLatestFrom(restoreStateFrom),\n        filter(([, state]) => state !== void 0),\n        distinctUntilChanged(),\n        map(([, snapshot]) => {\n          return snapshot.ranges;\n        })\n      ),\n      sizeRanges\n    );\n    return {\n      getState,\n      restoreStateFrom\n    };\n  },\n  tup(sizeSystem, domIOSystem, initialTopMostItemIndexSystem, propsReadySystem, windowScrollerSystem)\n);\nfunction locationFromSnapshot(snapshot) {\n  return { offset: snapshot.scrollTop, index: 0, align: \"start\" };\n}\nconst featureGroup1System = system(\n  ([\n    sizeRange,\n    initialItemCount,\n    propsReady,\n    scrollSeek,\n    totalListHeight,\n    initialScrollTopSystem2,\n    alignToBottom,\n    windowScroller,\n    scrollIntoView,\n    logger\n  ]) => {\n    return {\n      ...sizeRange,\n      ...initialItemCount,\n      ...propsReady,\n      ...scrollSeek,\n      ...totalListHeight,\n      ...initialScrollTopSystem2,\n      ...alignToBottom,\n      ...windowScroller,\n      ...scrollIntoView,\n      ...logger\n    };\n  },\n  tup(\n    sizeRangeSystem,\n    initialItemCountSystem,\n    propsReadySystem,\n    scrollSeekSystem,\n    totalListHeightSystem,\n    initialScrollTopSystem,\n    alignToBottomSystem,\n    windowScrollerSystem,\n    scrollIntoViewSystem,\n    loggerSystem\n  )\n);\nconst listSystem = system(\n  ([\n    {\n      totalCount,\n      sizeRanges,\n      fixedItemSize,\n      defaultItemSize,\n      trackItemSizes,\n      itemSize,\n      data,\n      firstItemIndex,\n      groupIndices,\n      statefulTotalCount,\n      gap,\n      sizes\n    },\n    { initialTopMostItemIndex, scrolledToInitialItem, initialItemFinalLocationReached },\n    domIO,\n    stateLoad,\n    followOutput,\n    { listState, topItemsIndexes, ...flags },\n    { scrollToIndex },\n    _,\n    { topItemCount },\n    { groupCounts },\n    featureGroup1\n  ]) => {\n    connect(flags.rangeChanged, featureGroup1.scrollSeekRangeChanged);\n    connect(\n      pipe(\n        featureGroup1.windowViewportRect,\n        map((value) => value.visibleHeight)\n      ),\n      domIO.viewportHeight\n    );\n    return {\n      // input\n      totalCount,\n      data,\n      firstItemIndex,\n      sizeRanges,\n      initialTopMostItemIndex,\n      scrolledToInitialItem,\n      initialItemFinalLocationReached,\n      topItemsIndexes,\n      topItemCount,\n      groupCounts,\n      fixedItemHeight: fixedItemSize,\n      defaultItemHeight: defaultItemSize,\n      gap,\n      ...followOutput,\n      // output\n      statefulTotalCount,\n      listState,\n      scrollToIndex,\n      trackItemSizes,\n      itemSize,\n      groupIndices,\n      // exported from stateFlagsSystem\n      ...flags,\n      // the bag of IO from featureGroup1System\n      ...featureGroup1,\n      ...domIO,\n      sizes,\n      ...stateLoad\n    };\n  },\n  tup(\n    sizeSystem,\n    initialTopMostItemIndexSystem,\n    domIOSystem,\n    stateLoadSystem,\n    followOutputSystem,\n    listStateSystem,\n    scrollToIndexSystem,\n    upwardScrollFixSystem,\n    topItemCountSystem,\n    groupedListSystem,\n    featureGroup1System\n  )\n);\nconst WEBKIT_STICKY = \"-webkit-sticky\";\nconst STICKY = \"sticky\";\nconst positionStickyCssValue = simpleMemoize(() => {\n  if (typeof document === \"undefined\") {\n    return STICKY;\n  }\n  const node = document.createElement(\"div\");\n  node.style.position = WEBKIT_STICKY;\n  return node.style.position === WEBKIT_STICKY ? WEBKIT_STICKY : STICKY;\n});\nfunction useWindowViewportRectRef(callback, customScrollParent) {\n  const viewportInfo = React.useRef(null);\n  const calculateInfo = React.useCallback(\n    (element) => {\n      if (element === null || !element.offsetParent) {\n        return;\n      }\n      const rect = element.getBoundingClientRect();\n      const visibleWidth = rect.width;\n      let visibleHeight, offsetTop;\n      if (customScrollParent) {\n        const customScrollParentRect = customScrollParent.getBoundingClientRect();\n        const deltaTop = rect.top - customScrollParentRect.top;\n        visibleHeight = customScrollParentRect.height - Math.max(0, deltaTop);\n        offsetTop = deltaTop + customScrollParent.scrollTop;\n      } else {\n        visibleHeight = window.innerHeight - Math.max(0, rect.top);\n        offsetTop = rect.top + window.pageYOffset;\n      }\n      viewportInfo.current = {\n        offsetTop,\n        visibleHeight,\n        visibleWidth\n      };\n      callback(viewportInfo.current);\n    },\n    [callback, customScrollParent]\n  );\n  const { callbackRef, ref } = useSizeWithElRef(calculateInfo);\n  const scrollAndResizeEventHandler = React.useCallback(() => {\n    calculateInfo(ref.current);\n  }, [calculateInfo, ref]);\n  React.useEffect(() => {\n    if (customScrollParent) {\n      customScrollParent.addEventListener(\"scroll\", scrollAndResizeEventHandler);\n      const observer = new ResizeObserver(() => {\n        requestAnimationFrame(scrollAndResizeEventHandler);\n      });\n      observer.observe(customScrollParent);\n      return () => {\n        customScrollParent.removeEventListener(\"scroll\", scrollAndResizeEventHandler);\n        observer.unobserve(customScrollParent);\n      };\n    } else {\n      window.addEventListener(\"scroll\", scrollAndResizeEventHandler);\n      window.addEventListener(\"resize\", scrollAndResizeEventHandler);\n      return () => {\n        window.removeEventListener(\"scroll\", scrollAndResizeEventHandler);\n        window.removeEventListener(\"resize\", scrollAndResizeEventHandler);\n      };\n    }\n  }, [scrollAndResizeEventHandler, customScrollParent]);\n  return callbackRef;\n}\nconst VirtuosoMockContext = React.createContext(void 0);\nconst VirtuosoGridMockContext = React.createContext(void 0);\nfunction identity(value) {\n  return value;\n}\nconst listComponentPropsSystem = /* @__PURE__ */ system(() => {\n  const itemContent = statefulStream((index) => `Item ${index}`);\n  const context = statefulStream(null);\n  const groupContent = statefulStream((index) => `Group ${index}`);\n  const components = statefulStream({});\n  const computeItemKey = statefulStream(identity);\n  const headerFooterTag = statefulStream(\"div\");\n  const scrollerRef = statefulStream(noop);\n  const distinctProp = (propName, defaultValue = null) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components2) => components2[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    );\n  };\n  return {\n    context,\n    itemContent,\n    groupContent,\n    components,\n    computeItemKey,\n    headerFooterTag,\n    scrollerRef,\n    FooterComponent: distinctProp(\"Footer\"),\n    HeaderComponent: distinctProp(\"Header\"),\n    TopItemListComponent: distinctProp(\"TopItemList\"),\n    ListComponent: distinctProp(\"List\", \"div\"),\n    ItemComponent: distinctProp(\"Item\", \"div\"),\n    GroupComponent: distinctProp(\"Group\", \"div\"),\n    ScrollerComponent: distinctProp(\"Scroller\", \"div\"),\n    EmptyPlaceholder: distinctProp(\"EmptyPlaceholder\"),\n    ScrollSeekPlaceholder: distinctProp(\"ScrollSeekPlaceholder\")\n  };\n});\nconst combinedSystem$2 = /* @__PURE__ */ system(([listSystem2, propsSystem]) => {\n  return { ...listSystem2, ...propsSystem };\n}, tup(listSystem, listComponentPropsSystem));\nconst DefaultScrollSeekPlaceholder$1 = ({ height }) => /* @__PURE__ */ React.createElement(\"div\", { style: { height } });\nconst GROUP_STYLE = { position: positionStickyCssValue(), zIndex: 1, overflowAnchor: \"none\" };\nconst ITEM_STYLE$1 = { overflowAnchor: \"none\" };\nconst Items$1 = /* @__PURE__ */ React.memo(function VirtuosoItems({ showTopList = false }) {\n  const listState = useEmitterValue$2(\"listState\");\n  const sizeRanges = usePublisher$2(\"sizeRanges\");\n  const useWindowScroll = useEmitterValue$2(\"useWindowScroll\");\n  const customScrollParent = useEmitterValue$2(\"customScrollParent\");\n  const windowScrollContainerStateCallback = usePublisher$2(\"windowScrollContainerState\");\n  const _scrollContainerStateCallback = usePublisher$2(\"scrollContainerState\");\n  const scrollContainerStateCallback = customScrollParent || useWindowScroll ? windowScrollContainerStateCallback : _scrollContainerStateCallback;\n  const itemContent = useEmitterValue$2(\"itemContent\");\n  const context = useEmitterValue$2(\"context\");\n  const groupContent = useEmitterValue$2(\"groupContent\");\n  const trackItemSizes = useEmitterValue$2(\"trackItemSizes\");\n  const itemSize = useEmitterValue$2(\"itemSize\");\n  const log = useEmitterValue$2(\"log\");\n  const listGap = usePublisher$2(\"gap\");\n  const { callbackRef } = useChangedListContentsSizes(\n    sizeRanges,\n    itemSize,\n    trackItemSizes,\n    showTopList ? noop : scrollContainerStateCallback,\n    log,\n    listGap,\n    customScrollParent\n  );\n  const [deviation, setDeviation] = React.useState(0);\n  useEmitter$2(\"deviation\", (value) => {\n    if (deviation !== value) {\n      setDeviation(value);\n    }\n  });\n  const EmptyPlaceholder = useEmitterValue$2(\"EmptyPlaceholder\");\n  const ScrollSeekPlaceholder = useEmitterValue$2(\"ScrollSeekPlaceholder\") || DefaultScrollSeekPlaceholder$1;\n  const ListComponent = useEmitterValue$2(\"ListComponent\");\n  const ItemComponent = useEmitterValue$2(\"ItemComponent\");\n  const GroupComponent = useEmitterValue$2(\"GroupComponent\");\n  const computeItemKey = useEmitterValue$2(\"computeItemKey\");\n  const isSeeking = useEmitterValue$2(\"isSeeking\");\n  const hasGroups2 = useEmitterValue$2(\"groupIndices\").length > 0;\n  const alignToBottom = useEmitterValue$2(\"alignToBottom\");\n  const initialItemFinalLocationReached = useEmitterValue$2(\"initialItemFinalLocationReached\");\n  const containerStyle = showTopList ? {} : {\n    boxSizing: \"border-box\",\n    paddingTop: listState.offsetTop,\n    paddingBottom: listState.offsetBottom,\n    marginTop: deviation !== 0 ? deviation : alignToBottom ? \"auto\" : 0,\n    ...initialItemFinalLocationReached ? {} : { visibility: \"hidden\" }\n  };\n  if (!showTopList && listState.totalCount === 0 && EmptyPlaceholder) {\n    return React.createElement(EmptyPlaceholder, contextPropIfNotDomElement(EmptyPlaceholder, context));\n  }\n  return React.createElement(\n    ListComponent,\n    {\n      ...contextPropIfNotDomElement(ListComponent, context),\n      ref: callbackRef,\n      style: containerStyle,\n      \"data-test-id\": showTopList ? \"virtuoso-top-item-list\" : \"virtuoso-item-list\"\n    },\n    (showTopList ? listState.topItems : listState.items).map((item) => {\n      const index = item.originalIndex;\n      const key = computeItemKey(index + listState.firstItemIndex, item.data, context);\n      if (isSeeking) {\n        return React.createElement(ScrollSeekPlaceholder, {\n          ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n          key,\n          index: item.index,\n          height: item.size,\n          type: item.type || \"item\",\n          ...item.type === \"group\" ? {} : { groupIndex: item.groupIndex }\n        });\n      }\n      if (item.type === \"group\") {\n        return React.createElement(\n          GroupComponent,\n          {\n            ...contextPropIfNotDomElement(GroupComponent, context),\n            key,\n            \"data-index\": index,\n            \"data-known-size\": item.size,\n            \"data-item-index\": item.index,\n            style: GROUP_STYLE\n          },\n          groupContent(item.index, context)\n        );\n      } else {\n        return React.createElement(\n          ItemComponent,\n          {\n            ...contextPropIfNotDomElement(ItemComponent, context),\n            ...itemPropIfNotDomElement(ItemComponent, item.data),\n            key,\n            \"data-index\": index,\n            \"data-known-size\": item.size,\n            \"data-item-index\": item.index,\n            \"data-item-group-index\": item.groupIndex,\n            style: ITEM_STYLE$1\n          },\n          hasGroups2 ? itemContent(item.index, item.groupIndex, item.data, context) : itemContent(item.index, item.data, context)\n        );\n      }\n    })\n  );\n});\nconst scrollerStyle = {\n  height: \"100%\",\n  outline: \"none\",\n  overflowY: \"auto\",\n  position: \"relative\",\n  WebkitOverflowScrolling: \"touch\"\n};\nconst viewportStyle = (alignToBottom) => ({\n  width: \"100%\",\n  height: \"100%\",\n  position: \"absolute\",\n  top: 0,\n  ...alignToBottom ? { display: \"flex\", flexDirection: \"column\" } : {}\n});\nconst topItemListStyle = {\n  width: \"100%\",\n  position: positionStickyCssValue(),\n  top: 0,\n  zIndex: 1\n};\nfunction contextPropIfNotDomElement(element, context) {\n  if (typeof element === \"string\") {\n    return void 0;\n  }\n  return { context };\n}\nfunction itemPropIfNotDomElement(element, item) {\n  return { item: typeof element === \"string\" ? void 0 : item };\n}\nconst Header$1 = /* @__PURE__ */ React.memo(function VirtuosoHeader() {\n  const Header2 = useEmitterValue$2(\"HeaderComponent\");\n  const headerHeight = usePublisher$2(\"headerHeight\");\n  const headerFooterTag = useEmitterValue$2(\"headerFooterTag\");\n  const ref = useSize((el) => headerHeight(correctItemSize(el, \"height\")));\n  const context = useEmitterValue$2(\"context\");\n  return Header2 ? React.createElement(headerFooterTag, { ref }, React.createElement(Header2, contextPropIfNotDomElement(Header2, context))) : null;\n});\nconst Footer$1 = /* @__PURE__ */ React.memo(function VirtuosoFooter() {\n  const Footer2 = useEmitterValue$2(\"FooterComponent\");\n  const footerHeight = usePublisher$2(\"footerHeight\");\n  const headerFooterTag = useEmitterValue$2(\"headerFooterTag\");\n  const ref = useSize((el) => footerHeight(correctItemSize(el, \"height\")));\n  const context = useEmitterValue$2(\"context\");\n  return Footer2 ? React.createElement(headerFooterTag, { ref }, React.createElement(Footer2, contextPropIfNotDomElement(Footer2, context))) : null;\n});\nfunction buildScroller({ usePublisher: usePublisher2, useEmitter: useEmitter2, useEmitterValue: useEmitterValue2 }) {\n  const Scroller2 = React.memo(function VirtuosoScroller({ style, children, ...props }) {\n    const scrollContainerStateCallback = usePublisher2(\"scrollContainerState\");\n    const ScrollerComponent = useEmitterValue2(\"ScrollerComponent\");\n    const smoothScrollTargetReached = usePublisher2(\"smoothScrollTargetReached\");\n    const scrollerRefCallback = useEmitterValue2(\"scrollerRef\");\n    const context = useEmitterValue2(\"context\");\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollContainerStateCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      scrollerRefCallback\n    );\n    useEmitter2(\"scrollTo\", scrollToCallback);\n    useEmitter2(\"scrollBy\", scrollByCallback);\n    return React.createElement(\n      ScrollerComponent,\n      {\n        ref: scrollerRef,\n        style: { ...scrollerStyle, ...style },\n        \"data-test-id\": \"virtuoso-scroller\",\n        \"data-virtuoso-scroller\": true,\n        tabIndex: 0,\n        ...props,\n        ...contextPropIfNotDomElement(ScrollerComponent, context)\n      },\n      children\n    );\n  });\n  return Scroller2;\n}\nfunction buildWindowScroller({ usePublisher: usePublisher2, useEmitter: useEmitter2, useEmitterValue: useEmitterValue2 }) {\n  const Scroller2 = React.memo(function VirtuosoWindowScroller({ style, children, ...props }) {\n    const scrollContainerStateCallback = usePublisher2(\"windowScrollContainerState\");\n    const ScrollerComponent = useEmitterValue2(\"ScrollerComponent\");\n    const smoothScrollTargetReached = usePublisher2(\"smoothScrollTargetReached\");\n    const totalListHeight = useEmitterValue2(\"totalListHeight\");\n    const deviation = useEmitterValue2(\"deviation\");\n    const customScrollParent = useEmitterValue2(\"customScrollParent\");\n    const context = useEmitterValue2(\"context\");\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollContainerStateCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      noop,\n      customScrollParent\n    );\n    useIsomorphicLayoutEffect$1(() => {\n      scrollerRef.current = customScrollParent ? customScrollParent : window;\n      return () => {\n        scrollerRef.current = null;\n      };\n    }, [scrollerRef, customScrollParent]);\n    useEmitter2(\"windowScrollTo\", scrollToCallback);\n    useEmitter2(\"scrollBy\", scrollByCallback);\n    return React.createElement(\n      ScrollerComponent,\n      {\n        style: { position: \"relative\", ...style, ...totalListHeight !== 0 ? { height: totalListHeight + deviation } : {} },\n        \"data-virtuoso-scroller\": true,\n        ...props,\n        ...contextPropIfNotDomElement(ScrollerComponent, context)\n      },\n      children\n    );\n  });\n  return Scroller2;\n}\nconst Viewport$2 = ({ children }) => {\n  const ctx = React.useContext(VirtuosoMockContext);\n  const viewportHeight = usePublisher$2(\"viewportHeight\");\n  const fixedItemHeight = usePublisher$2(\"fixedItemHeight\");\n  const alignToBottom = useEmitterValue$2(\"alignToBottom\");\n  const viewportRef = useSize(compose(viewportHeight, (el) => correctItemSize(el, \"height\")));\n  React.useEffect(() => {\n    if (ctx) {\n      viewportHeight(ctx.viewportHeight);\n      fixedItemHeight(ctx.itemHeight);\n    }\n  }, [ctx, viewportHeight, fixedItemHeight]);\n  return /* @__PURE__ */ React.createElement(\"div\", { style: viewportStyle(alignToBottom), ref: viewportRef, \"data-viewport-type\": \"element\" }, children);\n};\nconst WindowViewport$2 = ({ children }) => {\n  const ctx = React.useContext(VirtuosoMockContext);\n  const windowViewportRect = usePublisher$2(\"windowViewportRect\");\n  const fixedItemHeight = usePublisher$2(\"fixedItemHeight\");\n  const customScrollParent = useEmitterValue$2(\"customScrollParent\");\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent);\n  const alignToBottom = useEmitterValue$2(\"alignToBottom\");\n  React.useEffect(() => {\n    if (ctx) {\n      fixedItemHeight(ctx.itemHeight);\n      windowViewportRect({ offsetTop: 0, visibleHeight: ctx.viewportHeight, visibleWidth: 100 });\n    }\n  }, [ctx, windowViewportRect, fixedItemHeight]);\n  return /* @__PURE__ */ React.createElement(\"div\", { ref: viewportRef, style: viewportStyle(alignToBottom), \"data-viewport-type\": \"window\" }, children);\n};\nconst TopItemListContainer = ({ children }) => {\n  const TopItemList = useEmitterValue$2(\"TopItemListComponent\") || \"div\";\n  const headerHeight = useEmitterValue$2(\"headerHeight\");\n  const style = { ...topItemListStyle, marginTop: `${headerHeight}px` };\n  const context = useEmitterValue$2(\"context\");\n  return React.createElement(TopItemList, { style, ...contextPropIfNotDomElement(TopItemList, context) }, children);\n};\nconst ListRoot = /* @__PURE__ */ React.memo(function VirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue$2(\"useWindowScroll\");\n  const showTopList = useEmitterValue$2(\"topItemsIndexes\").length > 0;\n  const customScrollParent = useEmitterValue$2(\"customScrollParent\");\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller$2 : Scroller$2;\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport$2 : Viewport$2;\n  return /* @__PURE__ */ React.createElement(TheScroller, { ...props }, showTopList && /* @__PURE__ */ React.createElement(TopItemListContainer, null, /* @__PURE__ */ React.createElement(Items$1, { showTopList: true })), /* @__PURE__ */ React.createElement(TheViewport, null, /* @__PURE__ */ React.createElement(Header$1, null), /* @__PURE__ */ React.createElement(Items$1, null), /* @__PURE__ */ React.createElement(Footer$1, null)));\n});\nconst {\n  Component: List,\n  usePublisher: usePublisher$2,\n  useEmitterValue: useEmitterValue$2,\n  useEmitter: useEmitter$2\n} = /* @__PURE__ */ systemToComponent(\n  combinedSystem$2,\n  {\n    required: {},\n    optional: {\n      restoreStateFrom: \"restoreStateFrom\",\n      context: \"context\",\n      followOutput: \"followOutput\",\n      itemContent: \"itemContent\",\n      groupContent: \"groupContent\",\n      overscan: \"overscan\",\n      increaseViewportBy: \"increaseViewportBy\",\n      totalCount: \"totalCount\",\n      groupCounts: \"groupCounts\",\n      topItemCount: \"topItemCount\",\n      firstItemIndex: \"firstItemIndex\",\n      initialTopMostItemIndex: \"initialTopMostItemIndex\",\n      components: \"components\",\n      atBottomThreshold: \"atBottomThreshold\",\n      atTopThreshold: \"atTopThreshold\",\n      computeItemKey: \"computeItemKey\",\n      defaultItemHeight: \"defaultItemHeight\",\n      fixedItemHeight: \"fixedItemHeight\",\n      itemSize: \"itemSize\",\n      scrollSeekConfiguration: \"scrollSeekConfiguration\",\n      headerFooterTag: \"headerFooterTag\",\n      data: \"data\",\n      initialItemCount: \"initialItemCount\",\n      initialScrollTop: \"initialScrollTop\",\n      alignToBottom: \"alignToBottom\",\n      useWindowScroll: \"useWindowScroll\",\n      customScrollParent: \"customScrollParent\",\n      scrollerRef: \"scrollerRef\",\n      logLevel: \"logLevel\"\n    },\n    methods: {\n      scrollToIndex: \"scrollToIndex\",\n      scrollIntoView: \"scrollIntoView\",\n      scrollTo: \"scrollTo\",\n      scrollBy: \"scrollBy\",\n      autoscrollToBottom: \"autoscrollToBottom\",\n      getState: \"getState\"\n    },\n    events: {\n      isScrolling: \"isScrolling\",\n      endReached: \"endReached\",\n      startReached: \"startReached\",\n      rangeChanged: \"rangeChanged\",\n      atBottomStateChange: \"atBottomStateChange\",\n      atTopStateChange: \"atTopStateChange\",\n      totalListHeightChanged: \"totalListHeightChanged\",\n      itemsRendered: \"itemsRendered\",\n      groupIndices: \"groupIndices\"\n    }\n  },\n  ListRoot\n);\nconst Scroller$2 = /* @__PURE__ */ buildScroller({ usePublisher: usePublisher$2, useEmitterValue: useEmitterValue$2, useEmitter: useEmitter$2 });\nconst WindowScroller$2 = /* @__PURE__ */ buildWindowScroller({ usePublisher: usePublisher$2, useEmitterValue: useEmitterValue$2, useEmitter: useEmitter$2 });\nconst Virtuoso = List;\nconst GroupedVirtuoso = List;\nconst INITIAL_GRID_STATE = {\n  items: [],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0\n};\nconst PROBE_GRID_STATE = {\n  items: [{ index: 0 }],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0\n};\nconst { round, ceil, floor, min, max } = Math;\nfunction buildProbeGridState(items) {\n  return {\n    ...PROBE_GRID_STATE,\n    items\n  };\n}\nfunction buildItems(startIndex, endIndex, data) {\n  return Array.from({ length: endIndex - startIndex + 1 }).map((_, i) => {\n    const dataItem = data === null ? null : data[i + startIndex];\n    return { index: i + startIndex, data: dataItem };\n  });\n}\nfunction gapComparator(prev, next) {\n  return prev && prev.column === next.column && prev.row === next.row;\n}\nfunction dimensionComparator(prev, next) {\n  return prev && prev.width === next.width && prev.height === next.height;\n}\nconst gridSystem = /* @__PURE__ */ system(\n  ([\n    { overscan, visibleRange, listBoundary },\n    { scrollTop, viewportHeight, scrollBy, scrollTo, smoothScrollTargetReached, scrollContainerState, footerHeight, headerHeight },\n    stateFlags,\n    scrollSeek,\n    { propsReady, didMount },\n    { windowViewportRect, useWindowScroll, customScrollParent, windowScrollContainerState, windowScrollTo },\n    log\n  ]) => {\n    const totalCount = statefulStream(0);\n    const initialItemCount = statefulStream(0);\n    const gridState = statefulStream(INITIAL_GRID_STATE);\n    const viewportDimensions = statefulStream({ height: 0, width: 0 });\n    const itemDimensions = statefulStream({ height: 0, width: 0 });\n    const scrollToIndex = stream();\n    const scrollHeight = stream();\n    const deviation = statefulStream(0);\n    const data = statefulStream(null);\n    const gap = statefulStream({ row: 0, column: 0 });\n    const stateChanged = stream();\n    const restoreStateFrom = stream();\n    const stateRestoreInProgress = statefulStream(false);\n    const initialTopMostItemIndex = statefulStream(0);\n    const scrolledToInitialItem = statefulStream(true);\n    const scrollScheduled = statefulStream(false);\n    subscribe(\n      pipe(\n        didMount,\n        withLatestFrom(initialTopMostItemIndex),\n        filter(([_, location]) => !!location)\n      ),\n      () => {\n        publish(scrolledToInitialItem, false);\n        publish(initialItemCount, 0);\n      }\n    );\n    subscribe(\n      pipe(\n        combineLatest(didMount, scrolledToInitialItem, itemDimensions, viewportDimensions, initialTopMostItemIndex, scrollScheduled),\n        filter(([didMount2, scrolledToInitialItem2, itemDimensions2, viewportDimensions2, , scrollScheduled2]) => {\n          return didMount2 && !scrolledToInitialItem2 && itemDimensions2.height !== 0 && viewportDimensions2.height !== 0 && !scrollScheduled2;\n        })\n      ),\n      ([, , , , initialTopMostItemIndex2]) => {\n        publish(scrollScheduled, true);\n        skipFrames(1, () => {\n          publish(scrollToIndex, initialTopMostItemIndex2);\n        });\n        handleNext(pipe(scrollTop), () => {\n          publish(listBoundary, [0, 0]);\n          publish(scrolledToInitialItem, true);\n        });\n      }\n    );\n    connect(\n      pipe(\n        restoreStateFrom,\n        filter((value) => value !== void 0 && value !== null && value.scrollTop > 0),\n        mapTo(0)\n      ),\n      initialItemCount\n    );\n    subscribe(\n      pipe(\n        didMount,\n        withLatestFrom(restoreStateFrom),\n        filter(([, snapshot]) => snapshot !== void 0 && snapshot !== null)\n      ),\n      ([, snapshot]) => {\n        if (!snapshot) {\n          return;\n        }\n        publish(viewportDimensions, snapshot.viewport), publish(itemDimensions, snapshot == null ? void 0 : snapshot.item);\n        publish(gap, snapshot.gap);\n        if (snapshot.scrollTop > 0) {\n          publish(stateRestoreInProgress, true);\n          handleNext(pipe(scrollTop, skip(1)), (_value) => {\n            publish(stateRestoreInProgress, false);\n          });\n          publish(scrollTo, { top: snapshot.scrollTop });\n        }\n      }\n    );\n    connect(\n      pipe(\n        viewportDimensions,\n        map(({ height }) => height)\n      ),\n      viewportHeight\n    );\n    connect(\n      pipe(\n        combineLatest(\n          duc(viewportDimensions, dimensionComparator),\n          duc(itemDimensions, dimensionComparator),\n          duc(gap, (prev, next) => prev && prev.column === next.column && prev.row === next.row),\n          duc(scrollTop)\n        ),\n        map(([viewport, item, gap2, scrollTop2]) => ({\n          viewport,\n          item,\n          gap: gap2,\n          scrollTop: scrollTop2\n        }))\n      ),\n      stateChanged\n    );\n    connect(\n      pipe(\n        combineLatest(\n          duc(totalCount),\n          visibleRange,\n          duc(gap, gapComparator),\n          duc(itemDimensions, dimensionComparator),\n          duc(viewportDimensions, dimensionComparator),\n          duc(data),\n          duc(initialItemCount),\n          duc(stateRestoreInProgress),\n          duc(scrolledToInitialItem),\n          duc(initialTopMostItemIndex)\n        ),\n        filter(([, , , , , , , stateRestoreInProgress2]) => {\n          return !stateRestoreInProgress2;\n        }),\n        map(\n          ([\n            totalCount2,\n            [startOffset, endOffset],\n            gap2,\n            item,\n            viewport,\n            data2,\n            initialItemCount2,\n            ,\n            scrolledToInitialItem2,\n            initialTopMostItemIndex2\n          ]) => {\n            const { row: rowGap, column: columnGap } = gap2;\n            const { height: itemHeight, width: itemWidth } = item;\n            const { width: viewportWidth } = viewport;\n            if (initialItemCount2 === 0 && (totalCount2 === 0 || viewportWidth === 0)) {\n              return INITIAL_GRID_STATE;\n            }\n            if (itemWidth === 0) {\n              const startIndex2 = getInitialTopMostItemIndexNumber(initialTopMostItemIndex2, totalCount2);\n              const endIndex2 = startIndex2 === 0 ? Math.max(initialItemCount2 - 1, 0) : startIndex2;\n              return buildProbeGridState(buildItems(startIndex2, endIndex2, data2));\n            }\n            const perRow = itemsPerRow(viewportWidth, itemWidth, columnGap);\n            let startIndex;\n            let endIndex;\n            if (!scrolledToInitialItem2) {\n              startIndex = 0;\n              endIndex = -1;\n            } else if (startOffset === 0 && endOffset === 0 && initialItemCount2 > 0) {\n              startIndex = 0;\n              endIndex = initialItemCount2 - 1;\n            } else {\n              startIndex = perRow * floor((startOffset + rowGap) / (itemHeight + rowGap));\n              endIndex = perRow * ceil((endOffset + rowGap) / (itemHeight + rowGap)) - 1;\n              endIndex = min(totalCount2 - 1, max(endIndex, perRow - 1));\n              startIndex = min(endIndex, max(0, startIndex));\n            }\n            const items = buildItems(startIndex, endIndex, data2);\n            const { top, bottom } = gridLayout(viewport, gap2, item, items);\n            const rowCount = ceil(totalCount2 / perRow);\n            const totalHeight = rowCount * itemHeight + (rowCount - 1) * rowGap;\n            const offsetBottom = totalHeight - bottom;\n            return { items, offsetTop: top, offsetBottom, top, bottom, itemHeight, itemWidth };\n          }\n        )\n      ),\n      gridState\n    );\n    connect(\n      pipe(\n        data,\n        filter((data2) => data2 !== null),\n        map((data2) => data2.length)\n      ),\n      totalCount\n    );\n    connect(\n      pipe(\n        combineLatest(viewportDimensions, itemDimensions, gridState, gap),\n        filter(([viewportDimensions2, itemDimensions2, { items }]) => {\n          return items.length > 0 && itemDimensions2.height !== 0 && viewportDimensions2.height !== 0;\n        }),\n        map(([viewportDimensions2, itemDimensions2, { items }, gap2]) => {\n          const { top, bottom } = gridLayout(viewportDimensions2, gap2, itemDimensions2, items);\n          return [top, bottom];\n        }),\n        distinctUntilChanged(tupleComparator)\n      ),\n      listBoundary\n    );\n    const hasScrolled = statefulStream(false);\n    connect(\n      pipe(\n        scrollTop,\n        withLatestFrom(hasScrolled),\n        map(([scrollTop2, hasScrolled2]) => {\n          return hasScrolled2 || scrollTop2 !== 0;\n        })\n      ),\n      hasScrolled\n    );\n    const endReached = streamFromEmitter(\n      pipe(\n        duc(gridState),\n        filter(({ items }) => items.length > 0),\n        withLatestFrom(totalCount, hasScrolled),\n        filter(([{ items }, totalCount2, hasScrolled2]) => hasScrolled2 && items[items.length - 1].index === totalCount2 - 1),\n        map(([, totalCount2]) => totalCount2 - 1),\n        distinctUntilChanged()\n      )\n    );\n    const startReached = streamFromEmitter(\n      pipe(\n        duc(gridState),\n        filter(({ items }) => {\n          return items.length > 0 && items[0].index === 0;\n        }),\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        mapTo(0),\n        distinctUntilChanged()\n      )\n    );\n    const rangeChanged = streamFromEmitter(\n      pipe(\n        duc(gridState),\n        withLatestFrom(stateRestoreInProgress),\n        filter(([{ items }, stateRestoreInProgress2]) => items.length > 0 && !stateRestoreInProgress2),\n        map(([{ items }]) => {\n          return {\n            startIndex: items[0].index,\n            endIndex: items[items.length - 1].index\n          };\n        }),\n        distinctUntilChanged(rangeComparator),\n        throttleTime(0)\n      )\n    );\n    connect(rangeChanged, scrollSeek.scrollSeekRangeChanged);\n    connect(\n      pipe(\n        scrollToIndex,\n        withLatestFrom(viewportDimensions, itemDimensions, totalCount, gap),\n        map(([location, viewportDimensions2, itemDimensions2, totalCount2, gap2]) => {\n          const normalLocation = normalizeIndexLocation(location);\n          const { align, behavior, offset } = normalLocation;\n          let index = normalLocation.index;\n          if (index === \"LAST\") {\n            index = totalCount2 - 1;\n          }\n          index = max(0, index, min(totalCount2 - 1, index));\n          let top = itemTop(viewportDimensions2, gap2, itemDimensions2, index);\n          if (align === \"end\") {\n            top = round(top - viewportDimensions2.height + itemDimensions2.height);\n          } else if (align === \"center\") {\n            top = round(top - viewportDimensions2.height / 2 + itemDimensions2.height / 2);\n          }\n          if (offset) {\n            top += offset;\n          }\n          return { top, behavior };\n        })\n      ),\n      scrollTo\n    );\n    const totalListHeight = statefulStreamFromEmitter(\n      pipe(\n        gridState,\n        map((gridState2) => {\n          return gridState2.offsetBottom + gridState2.bottom;\n        })\n      ),\n      0\n    );\n    connect(\n      pipe(\n        windowViewportRect,\n        map((viewportInfo) => ({ width: viewportInfo.visibleWidth, height: viewportInfo.visibleHeight }))\n      ),\n      viewportDimensions\n    );\n    return {\n      // input\n      data,\n      totalCount,\n      viewportDimensions,\n      itemDimensions,\n      scrollTop,\n      scrollHeight,\n      overscan,\n      scrollBy,\n      scrollTo,\n      scrollToIndex,\n      smoothScrollTargetReached,\n      windowViewportRect,\n      windowScrollTo,\n      useWindowScroll,\n      customScrollParent,\n      windowScrollContainerState,\n      deviation,\n      scrollContainerState,\n      footerHeight,\n      headerHeight,\n      initialItemCount,\n      gap,\n      restoreStateFrom,\n      ...scrollSeek,\n      initialTopMostItemIndex,\n      // output\n      gridState,\n      totalListHeight,\n      ...stateFlags,\n      startReached,\n      endReached,\n      rangeChanged,\n      stateChanged,\n      propsReady,\n      stateRestoreInProgress,\n      ...log\n    };\n  },\n  tup(sizeRangeSystem, domIOSystem, stateFlagsSystem, scrollSeekSystem, propsReadySystem, windowScrollerSystem, loggerSystem)\n);\nfunction gridLayout(viewport, gap, item, items) {\n  const { height: itemHeight } = item;\n  if (itemHeight === void 0 || items.length === 0) {\n    return { top: 0, bottom: 0 };\n  }\n  const top = itemTop(viewport, gap, item, items[0].index);\n  const bottom = itemTop(viewport, gap, item, items[items.length - 1].index) + itemHeight;\n  return { top, bottom };\n}\nfunction itemTop(viewport, gap, item, index) {\n  const perRow = itemsPerRow(viewport.width, item.width, gap.column);\n  const rowCount = floor(index / perRow);\n  const top = rowCount * item.height + max(0, rowCount - 1) * gap.row;\n  return top > 0 ? top + gap.row : top;\n}\nfunction itemsPerRow(viewportWidth, itemWidth, gap) {\n  return max(1, floor((viewportWidth + gap) / (floor(itemWidth) + gap)));\n}\nconst gridComponentPropsSystem = /* @__PURE__ */ system(() => {\n  const itemContent = statefulStream((index) => `Item ${index}`);\n  const components = statefulStream({});\n  const context = statefulStream(null);\n  const itemClassName = statefulStream(\"virtuoso-grid-item\");\n  const listClassName = statefulStream(\"virtuoso-grid-list\");\n  const computeItemKey = statefulStream(identity);\n  const headerFooterTag = statefulStream(\"div\");\n  const scrollerRef = statefulStream(noop);\n  const distinctProp = (propName, defaultValue = null) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components2) => components2[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    );\n  };\n  return {\n    context,\n    itemContent,\n    components,\n    computeItemKey,\n    itemClassName,\n    listClassName,\n    headerFooterTag,\n    scrollerRef,\n    FooterComponent: distinctProp(\"Footer\"),\n    HeaderComponent: distinctProp(\"Header\"),\n    ListComponent: distinctProp(\"List\", \"div\"),\n    ItemComponent: distinctProp(\"Item\", \"div\"),\n    ScrollerComponent: distinctProp(\"Scroller\", \"div\"),\n    ScrollSeekPlaceholder: distinctProp(\"ScrollSeekPlaceholder\", \"div\")\n  };\n});\nconst combinedSystem$1 = /* @__PURE__ */ system(([gridSystem2, gridComponentPropsSystem2]) => {\n  return { ...gridSystem2, ...gridComponentPropsSystem2 };\n}, tup(gridSystem, gridComponentPropsSystem));\nconst GridItems = /* @__PURE__ */ React.memo(function GridItems2() {\n  const gridState = useEmitterValue$1(\"gridState\");\n  const listClassName = useEmitterValue$1(\"listClassName\");\n  const itemClassName = useEmitterValue$1(\"itemClassName\");\n  const itemContent = useEmitterValue$1(\"itemContent\");\n  const computeItemKey = useEmitterValue$1(\"computeItemKey\");\n  const isSeeking = useEmitterValue$1(\"isSeeking\");\n  const scrollHeightCallback = usePublisher$1(\"scrollHeight\");\n  const ItemComponent = useEmitterValue$1(\"ItemComponent\");\n  const ListComponent = useEmitterValue$1(\"ListComponent\");\n  const ScrollSeekPlaceholder = useEmitterValue$1(\"ScrollSeekPlaceholder\");\n  const context = useEmitterValue$1(\"context\");\n  const itemDimensions = usePublisher$1(\"itemDimensions\");\n  const gridGap = usePublisher$1(\"gap\");\n  const log = useEmitterValue$1(\"log\");\n  const stateRestoreInProgress = useEmitterValue$1(\"stateRestoreInProgress\");\n  const listRef = useSize((el) => {\n    const scrollHeight = el.parentElement.parentElement.scrollHeight;\n    scrollHeightCallback(scrollHeight);\n    const firstItem = el.firstChild;\n    if (firstItem) {\n      const { width, height } = firstItem.getBoundingClientRect();\n      itemDimensions({ width, height });\n    }\n    gridGap({\n      row: resolveGapValue(\"row-gap\", getComputedStyle(el).rowGap, log),\n      column: resolveGapValue(\"column-gap\", getComputedStyle(el).columnGap, log)\n    });\n  });\n  if (stateRestoreInProgress) {\n    return null;\n  }\n  return React.createElement(\n    ListComponent,\n    {\n      ref: listRef,\n      className: listClassName,\n      ...contextPropIfNotDomElement(ListComponent, context),\n      style: { paddingTop: gridState.offsetTop, paddingBottom: gridState.offsetBottom },\n      \"data-test-id\": \"virtuoso-item-list\"\n    },\n    gridState.items.map((item) => {\n      const key = computeItemKey(item.index, item.data, context);\n      return isSeeking ? React.createElement(ScrollSeekPlaceholder, {\n        key,\n        ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n        index: item.index,\n        height: gridState.itemHeight,\n        width: gridState.itemWidth\n      }) : React.createElement(\n        ItemComponent,\n        { ...contextPropIfNotDomElement(ItemComponent, context), className: itemClassName, \"data-index\": item.index, key },\n        itemContent(item.index, item.data, context)\n      );\n    })\n  );\n});\nconst Header = React.memo(function VirtuosoHeader2() {\n  const Header2 = useEmitterValue$1(\"HeaderComponent\");\n  const headerHeight = usePublisher$1(\"headerHeight\");\n  const headerFooterTag = useEmitterValue$1(\"headerFooterTag\");\n  const ref = useSize((el) => headerHeight(correctItemSize(el, \"height\")));\n  const context = useEmitterValue$1(\"context\");\n  return Header2 ? React.createElement(headerFooterTag, { ref }, React.createElement(Header2, contextPropIfNotDomElement(Header2, context))) : null;\n});\nconst Footer = React.memo(function VirtuosoGridFooter() {\n  const Footer2 = useEmitterValue$1(\"FooterComponent\");\n  const footerHeight = usePublisher$1(\"footerHeight\");\n  const headerFooterTag = useEmitterValue$1(\"headerFooterTag\");\n  const ref = useSize((el) => footerHeight(correctItemSize(el, \"height\")));\n  const context = useEmitterValue$1(\"context\");\n  return Footer2 ? React.createElement(headerFooterTag, { ref }, React.createElement(Footer2, contextPropIfNotDomElement(Footer2, context))) : null;\n});\nconst Viewport$1 = ({ children }) => {\n  const ctx = React.useContext(VirtuosoGridMockContext);\n  const itemDimensions = usePublisher$1(\"itemDimensions\");\n  const viewportDimensions = usePublisher$1(\"viewportDimensions\");\n  const viewportRef = useSize((el) => {\n    viewportDimensions(el.getBoundingClientRect());\n  });\n  React.useEffect(() => {\n    if (ctx) {\n      viewportDimensions({ height: ctx.viewportHeight, width: ctx.viewportWidth });\n      itemDimensions({ height: ctx.itemHeight, width: ctx.itemWidth });\n    }\n  }, [ctx, viewportDimensions, itemDimensions]);\n  return /* @__PURE__ */ React.createElement(\"div\", { style: viewportStyle(false), ref: viewportRef }, children);\n};\nconst WindowViewport$1 = ({ children }) => {\n  const ctx = React.useContext(VirtuosoGridMockContext);\n  const windowViewportRect = usePublisher$1(\"windowViewportRect\");\n  const itemDimensions = usePublisher$1(\"itemDimensions\");\n  const customScrollParent = useEmitterValue$1(\"customScrollParent\");\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent);\n  React.useEffect(() => {\n    if (ctx) {\n      itemDimensions({ height: ctx.itemHeight, width: ctx.itemWidth });\n      windowViewportRect({ offsetTop: 0, visibleHeight: ctx.viewportHeight, visibleWidth: ctx.viewportWidth });\n    }\n  }, [ctx, windowViewportRect, itemDimensions]);\n  return /* @__PURE__ */ React.createElement(\"div\", { ref: viewportRef, style: viewportStyle(false) }, children);\n};\nconst GridRoot = /* @__PURE__ */ React.memo(function GridRoot2({ ...props }) {\n  const useWindowScroll = useEmitterValue$1(\"useWindowScroll\");\n  const customScrollParent = useEmitterValue$1(\"customScrollParent\");\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller$1 : Scroller$1;\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport$1 : Viewport$1;\n  return /* @__PURE__ */ React.createElement(TheScroller, { ...props }, /* @__PURE__ */ React.createElement(TheViewport, null, /* @__PURE__ */ React.createElement(Header, null), /* @__PURE__ */ React.createElement(GridItems, null), /* @__PURE__ */ React.createElement(Footer, null)));\n});\nconst {\n  Component: Grid,\n  usePublisher: usePublisher$1,\n  useEmitterValue: useEmitterValue$1,\n  useEmitter: useEmitter$1\n} = /* @__PURE__ */ systemToComponent(\n  combinedSystem$1,\n  {\n    optional: {\n      context: \"context\",\n      totalCount: \"totalCount\",\n      overscan: \"overscan\",\n      itemContent: \"itemContent\",\n      components: \"components\",\n      computeItemKey: \"computeItemKey\",\n      data: \"data\",\n      initialItemCount: \"initialItemCount\",\n      scrollSeekConfiguration: \"scrollSeekConfiguration\",\n      headerFooterTag: \"headerFooterTag\",\n      listClassName: \"listClassName\",\n      itemClassName: \"itemClassName\",\n      useWindowScroll: \"useWindowScroll\",\n      customScrollParent: \"customScrollParent\",\n      scrollerRef: \"scrollerRef\",\n      logLevel: \"logLevel\",\n      restoreStateFrom: \"restoreStateFrom\",\n      initialTopMostItemIndex: \"initialTopMostItemIndex\"\n    },\n    methods: {\n      scrollTo: \"scrollTo\",\n      scrollBy: \"scrollBy\",\n      scrollToIndex: \"scrollToIndex\"\n    },\n    events: {\n      isScrolling: \"isScrolling\",\n      endReached: \"endReached\",\n      startReached: \"startReached\",\n      rangeChanged: \"rangeChanged\",\n      atBottomStateChange: \"atBottomStateChange\",\n      atTopStateChange: \"atTopStateChange\",\n      stateChanged: \"stateChanged\"\n    }\n  },\n  GridRoot\n);\nconst Scroller$1 = /* @__PURE__ */ buildScroller({ usePublisher: usePublisher$1, useEmitterValue: useEmitterValue$1, useEmitter: useEmitter$1 });\nconst WindowScroller$1 = /* @__PURE__ */ buildWindowScroller({ usePublisher: usePublisher$1, useEmitterValue: useEmitterValue$1, useEmitter: useEmitter$1 });\nfunction resolveGapValue(property, value, log) {\n  if (value !== \"normal\" && !(value == null ? void 0 : value.endsWith(\"px\"))) {\n    log(`${property} was not resolved to pixel value correctly`, value, LogLevel.WARN);\n  }\n  if (value === \"normal\") {\n    return 0;\n  }\n  return parseInt(value != null ? value : \"0\", 10);\n}\nconst VirtuosoGrid = Grid;\nconst tableComponentPropsSystem = /* @__PURE__ */ system(() => {\n  const itemContent = statefulStream((index) => /* @__PURE__ */ React.createElement(\"td\", null, \"Item $\", index));\n  const context = statefulStream(null);\n  const fixedHeaderContent = statefulStream(null);\n  const fixedFooterContent = statefulStream(null);\n  const components = statefulStream({});\n  const computeItemKey = statefulStream(identity);\n  const scrollerRef = statefulStream(noop);\n  const distinctProp = (propName, defaultValue = null) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components2) => components2[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    );\n  };\n  return {\n    context,\n    itemContent,\n    fixedHeaderContent,\n    fixedFooterContent,\n    components,\n    computeItemKey,\n    scrollerRef,\n    TableComponent: distinctProp(\"Table\", \"table\"),\n    TableHeadComponent: distinctProp(\"TableHead\", \"thead\"),\n    TableFooterComponent: distinctProp(\"TableFoot\", \"tfoot\"),\n    TableBodyComponent: distinctProp(\"TableBody\", \"tbody\"),\n    TableRowComponent: distinctProp(\"TableRow\", \"tr\"),\n    ScrollerComponent: distinctProp(\"Scroller\", \"div\"),\n    EmptyPlaceholder: distinctProp(\"EmptyPlaceholder\"),\n    ScrollSeekPlaceholder: distinctProp(\"ScrollSeekPlaceholder\"),\n    FillerRow: distinctProp(\"FillerRow\")\n  };\n});\nconst combinedSystem = /* @__PURE__ */ system(([listSystem2, propsSystem]) => {\n  return { ...listSystem2, ...propsSystem };\n}, tup(listSystem, tableComponentPropsSystem));\nconst DefaultScrollSeekPlaceholder = ({ height }) => /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", { style: { height } }));\nconst DefaultFillerRow = ({ height }) => /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", { style: { height, padding: 0, border: 0 } }));\nconst ITEM_STYLE = { overflowAnchor: \"none\" };\nconst Items = /* @__PURE__ */ React.memo(function VirtuosoItems2() {\n  const listState = useEmitterValue(\"listState\");\n  const sizeRanges = usePublisher(\"sizeRanges\");\n  const useWindowScroll = useEmitterValue(\"useWindowScroll\");\n  const customScrollParent = useEmitterValue(\"customScrollParent\");\n  const windowScrollContainerStateCallback = usePublisher(\"windowScrollContainerState\");\n  const _scrollContainerStateCallback = usePublisher(\"scrollContainerState\");\n  const scrollContainerStateCallback = customScrollParent || useWindowScroll ? windowScrollContainerStateCallback : _scrollContainerStateCallback;\n  const itemContent = useEmitterValue(\"itemContent\");\n  const trackItemSizes = useEmitterValue(\"trackItemSizes\");\n  const itemSize = useEmitterValue(\"itemSize\");\n  const log = useEmitterValue(\"log\");\n  const { callbackRef, ref } = useChangedListContentsSizes(\n    sizeRanges,\n    itemSize,\n    trackItemSizes,\n    scrollContainerStateCallback,\n    log,\n    void 0,\n    customScrollParent\n  );\n  const [deviation, setDeviation] = React.useState(0);\n  useEmitter(\"deviation\", (value) => {\n    if (deviation !== value) {\n      ref.current.style.marginTop = `${value}px`;\n      setDeviation(value);\n    }\n  });\n  const EmptyPlaceholder = useEmitterValue(\"EmptyPlaceholder\");\n  const ScrollSeekPlaceholder = useEmitterValue(\"ScrollSeekPlaceholder\") || DefaultScrollSeekPlaceholder;\n  const FillerRow = useEmitterValue(\"FillerRow\") || DefaultFillerRow;\n  const TableBodyComponent = useEmitterValue(\"TableBodyComponent\");\n  const TableRowComponent = useEmitterValue(\"TableRowComponent\");\n  const computeItemKey = useEmitterValue(\"computeItemKey\");\n  const isSeeking = useEmitterValue(\"isSeeking\");\n  const paddingTopAddition = useEmitterValue(\"paddingTopAddition\");\n  const firstItemIndex = useEmitterValue(\"firstItemIndex\");\n  const statefulTotalCount = useEmitterValue(\"statefulTotalCount\");\n  const context = useEmitterValue(\"context\");\n  if (statefulTotalCount === 0 && EmptyPlaceholder) {\n    return React.createElement(EmptyPlaceholder, contextPropIfNotDomElement(EmptyPlaceholder, context));\n  }\n  const paddingTop = listState.offsetTop + paddingTopAddition + deviation;\n  const paddingBottom = listState.offsetBottom;\n  const paddingTopEl = paddingTop > 0 ? /* @__PURE__ */ React.createElement(FillerRow, { height: paddingTop, key: \"padding-top\", context }) : null;\n  const paddingBottomEl = paddingBottom > 0 ? /* @__PURE__ */ React.createElement(FillerRow, { height: paddingBottom, key: \"padding-bottom\", context }) : null;\n  const items = listState.items.map((item) => {\n    const index = item.originalIndex;\n    const key = computeItemKey(index + firstItemIndex, item.data, context);\n    if (isSeeking) {\n      return React.createElement(ScrollSeekPlaceholder, {\n        ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n        key,\n        index: item.index,\n        height: item.size,\n        type: item.type || \"item\"\n      });\n    }\n    return React.createElement(\n      TableRowComponent,\n      {\n        ...contextPropIfNotDomElement(TableRowComponent, context),\n        ...itemPropIfNotDomElement(TableRowComponent, item.data),\n        key,\n        \"data-index\": index,\n        \"data-known-size\": item.size,\n        \"data-item-index\": item.index,\n        style: ITEM_STYLE\n      },\n      itemContent(item.index, item.data, context)\n    );\n  });\n  return React.createElement(\n    TableBodyComponent,\n    { ref: callbackRef, \"data-test-id\": \"virtuoso-item-list\", ...contextPropIfNotDomElement(TableBodyComponent, context) },\n    [paddingTopEl, ...items, paddingBottomEl]\n  );\n});\nconst Viewport = ({ children }) => {\n  const ctx = React.useContext(VirtuosoMockContext);\n  const viewportHeight = usePublisher(\"viewportHeight\");\n  const fixedItemHeight = usePublisher(\"fixedItemHeight\");\n  const viewportRef = useSize(compose(viewportHeight, (el) => correctItemSize(el, \"height\")));\n  React.useEffect(() => {\n    if (ctx) {\n      viewportHeight(ctx.viewportHeight);\n      fixedItemHeight(ctx.itemHeight);\n    }\n  }, [ctx, viewportHeight, fixedItemHeight]);\n  return /* @__PURE__ */ React.createElement(\"div\", { style: viewportStyle(false), ref: viewportRef, \"data-viewport-type\": \"element\" }, children);\n};\nconst WindowViewport = ({ children }) => {\n  const ctx = React.useContext(VirtuosoMockContext);\n  const windowViewportRect = usePublisher(\"windowViewportRect\");\n  const fixedItemHeight = usePublisher(\"fixedItemHeight\");\n  const customScrollParent = useEmitterValue(\"customScrollParent\");\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent);\n  React.useEffect(() => {\n    if (ctx) {\n      fixedItemHeight(ctx.itemHeight);\n      windowViewportRect({ offsetTop: 0, visibleHeight: ctx.viewportHeight, visibleWidth: 100 });\n    }\n  }, [ctx, windowViewportRect, fixedItemHeight]);\n  return /* @__PURE__ */ React.createElement(\"div\", { ref: viewportRef, style: viewportStyle(false), \"data-viewport-type\": \"window\" }, children);\n};\nconst TableRoot = /* @__PURE__ */ React.memo(function TableVirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue(\"useWindowScroll\");\n  const customScrollParent = useEmitterValue(\"customScrollParent\");\n  const fixedHeaderHeight = usePublisher(\"fixedHeaderHeight\");\n  const fixedFooterHeight = usePublisher(\"fixedFooterHeight\");\n  const fixedHeaderContent = useEmitterValue(\"fixedHeaderContent\");\n  const fixedFooterContent = useEmitterValue(\"fixedFooterContent\");\n  const context = useEmitterValue(\"context\");\n  const theadRef = useSize(compose(fixedHeaderHeight, (el) => correctItemSize(el, \"height\")));\n  const tfootRef = useSize(compose(fixedFooterHeight, (el) => correctItemSize(el, \"height\")));\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller;\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport;\n  const TheTable = useEmitterValue(\"TableComponent\");\n  const TheTHead = useEmitterValue(\"TableHeadComponent\");\n  const TheTFoot = useEmitterValue(\"TableFooterComponent\");\n  const theHead = fixedHeaderContent ? React.createElement(\n    TheTHead,\n    {\n      key: \"TableHead\",\n      style: { zIndex: 2, position: \"sticky\", top: 0 },\n      ref: theadRef,\n      ...contextPropIfNotDomElement(TheTHead, context)\n    },\n    fixedHeaderContent()\n  ) : null;\n  const theFoot = fixedFooterContent ? React.createElement(\n    TheTFoot,\n    {\n      key: \"TableFoot\",\n      style: { zIndex: 1, position: \"sticky\", bottom: 0 },\n      ref: tfootRef,\n      ...contextPropIfNotDomElement(TheTFoot, context)\n    },\n    fixedFooterContent()\n  ) : null;\n  return /* @__PURE__ */ React.createElement(TheScroller, { ...props }, /* @__PURE__ */ React.createElement(TheViewport, null, React.createElement(\n    TheTable,\n    { style: { borderSpacing: 0, overflowAnchor: \"none\" }, ...contextPropIfNotDomElement(TheTable, context) },\n    [theHead, /* @__PURE__ */ React.createElement(Items, { key: \"TableBody\" }), theFoot]\n  )));\n});\nconst {\n  Component: Table,\n  usePublisher,\n  useEmitterValue,\n  useEmitter\n} = /* @__PURE__ */ systemToComponent(\n  combinedSystem,\n  {\n    required: {},\n    optional: {\n      restoreStateFrom: \"restoreStateFrom\",\n      context: \"context\",\n      followOutput: \"followOutput\",\n      firstItemIndex: \"firstItemIndex\",\n      itemContent: \"itemContent\",\n      fixedHeaderContent: \"fixedHeaderContent\",\n      fixedFooterContent: \"fixedFooterContent\",\n      overscan: \"overscan\",\n      increaseViewportBy: \"increaseViewportBy\",\n      totalCount: \"totalCount\",\n      topItemCount: \"topItemCount\",\n      initialTopMostItemIndex: \"initialTopMostItemIndex\",\n      components: \"components\",\n      groupCounts: \"groupCounts\",\n      atBottomThreshold: \"atBottomThreshold\",\n      atTopThreshold: \"atTopThreshold\",\n      computeItemKey: \"computeItemKey\",\n      defaultItemHeight: \"defaultItemHeight\",\n      fixedItemHeight: \"fixedItemHeight\",\n      itemSize: \"itemSize\",\n      scrollSeekConfiguration: \"scrollSeekConfiguration\",\n      data: \"data\",\n      initialItemCount: \"initialItemCount\",\n      initialScrollTop: \"initialScrollTop\",\n      alignToBottom: \"alignToBottom\",\n      useWindowScroll: \"useWindowScroll\",\n      customScrollParent: \"customScrollParent\",\n      scrollerRef: \"scrollerRef\",\n      logLevel: \"logLevel\"\n    },\n    methods: {\n      scrollToIndex: \"scrollToIndex\",\n      scrollIntoView: \"scrollIntoView\",\n      scrollTo: \"scrollTo\",\n      scrollBy: \"scrollBy\",\n      getState: \"getState\"\n    },\n    events: {\n      isScrolling: \"isScrolling\",\n      endReached: \"endReached\",\n      startReached: \"startReached\",\n      rangeChanged: \"rangeChanged\",\n      atBottomStateChange: \"atBottomStateChange\",\n      atTopStateChange: \"atTopStateChange\",\n      totalListHeightChanged: \"totalListHeightChanged\",\n      itemsRendered: \"itemsRendered\",\n      groupIndices: \"groupIndices\"\n    }\n  },\n  TableRoot\n);\nconst Scroller = /* @__PURE__ */ buildScroller({ usePublisher, useEmitterValue, useEmitter });\nconst WindowScroller = /* @__PURE__ */ buildWindowScroller({ usePublisher, useEmitterValue, useEmitter });\nconst TableVirtuoso = Table;\nexport {\n  GroupedVirtuoso,\n  LogLevel,\n  TableVirtuoso,\n  Virtuoso,\n  VirtuosoGrid,\n  VirtuosoGridMockContext,\n  VirtuosoMockContext\n};\n"],
  "mappings": "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",
  "names": ["React", "ReactDOM"]
}
