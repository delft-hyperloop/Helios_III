{
  "version": 3,
  "sources": ["../../react-speedometer/dist/Speedometer.js", "../../react-speedometer/dist/context.js", "../../react-speedometer/dist/Arc.js", "../../react-speedometer/dist/utils.js", "../../react-speedometer/dist/Background.js", "../../react-speedometer/dist/DangerPath.js", "../../react-speedometer/dist/Indicator.js", "../../react-speedometer/dist/Marks.js", "../../react-speedometer/dist/Needle.js", "../../react-speedometer/dist/Progress.js", "../../react-speedometer/dist/index.js"],
  "sourcesContent": ["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useMemo } from 'react';\nimport SpeedometerContext from './context';\nexport default function Speedometer({ width = 250, height = width, angle = 250, rotation = -angle / 2, value = 0, min = 0, max = 180, lineCap = 'butt', accentColor = '#00e0ff', fontFamily = 'helvetica', children, }) {\n    const radius = width / 2;\n    const currentFillAngle = useMemo(() => {\n        const clampValue = Math.min(max, Math.max(min, Number(value)));\n        return (angle * (clampValue - min)) / (max - min);\n    }, [min, max, value, angle]);\n    const contextValue = {\n        currentFillAngle,\n        radius,\n        rotation,\n        min,\n        max,\n        angle,\n        lineCap,\n        accentColor,\n        fontFamily,\n        value,\n    };\n    return (_jsx(SpeedometerContext.Provider, { value: contextValue, children: _jsx(\"svg\", { width: width, height: height, children: _jsx(\"g\", { transform: `rotate(${rotation} ${radius} ${radius})`, children: children }) }) }));\n}\n", "import { createContext } from 'react';\nexport default createContext({\n    currentFillAngle: 0,\n    radius: 0,\n    rotation: 0,\n    min: 0,\n    max: 0,\n    angle: 0,\n    lineCap: 'butt',\n    accentColor: '#00e0ff',\n    fontFamily: 'helvetica',\n    value: 0,\n});\n", "import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext, useMemo } from 'react';\nimport Context from './context';\nimport { getCirclePath } from './utils';\nexport default function Arc({ color = 'black', opacity = 0.3, arcWidth = 4, lineCap, ...rest }) {\n    const { radius, lineCap: globalLineCap, angle, } = useContext(Context);\n    const secondaryPath = useMemo(() => getCirclePath(radius, radius, radius - arcWidth / 2, 0, angle), [radius, arcWidth, angle]);\n    return (_jsx(\"path\", { d: secondaryPath, stroke: color, strokeOpacity: opacity, strokeWidth: arcWidth, strokeLinecap: lineCap || globalLineCap, fill: 'transparent', ...rest }));\n}\n", "export const polarToCartesian = (centerX, centerY, radius, angleInDegrees) => {\n    const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\n    return {\n        x: centerX + radius * Math.cos(angleInRadians),\n        y: centerY + radius * Math.sin(angleInRadians),\n    };\n};\nexport const getCirclePath = (x, y, radius, startAngle, endAngle) => {\n    const start = polarToCartesian(x, y, radius, endAngle * 0.9999);\n    const end = polarToCartesian(x, y, radius, startAngle);\n    const largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';\n    const d = ['M', start.x, start.y, 'A', radius, radius, 0, largeArcFlag, 0, end.x, end.y];\n    return d.join(' ');\n};\n", "import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext, useMemo } from 'react';\nimport Context from './context';\nimport { getCirclePath } from './utils';\nexport default function Background({ angle = 360, color = 'black', opacity = 0.5, ...rest }) {\n    const { rotation, radius } = useContext(Context);\n    const backgroundStart = rotation + angle / 2;\n    const backgroundPath = useMemo(() => getCirclePath(radius, radius, radius, -backgroundStart, -backgroundStart + angle), [radius, backgroundStart, angle]);\n    return (_jsx(\"path\", { d: backgroundPath, fill: color, fillOpacity: opacity, ...rest }));\n}\n", "import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext, useMemo } from 'react';\nimport Context from './context';\nimport { getCirclePath } from './utils';\nexport default function DangerPath({ color = '#FF3333', angle = 50, arcWidth = 4, lineCap, offset = 6, ...rest }) {\n    const { radius, angle: globalAngle, lineCap: globalLineCap, } = useContext(Context);\n    const circlePath = useMemo(() => getCirclePath(radius, radius, radius - arcWidth - offset, globalAngle - angle, globalAngle), [radius, globalAngle, angle, arcWidth, offset]);\n    return (_jsx(\"path\", { d: circlePath, stroke: color, strokeWidth: arcWidth, strokeLinecap: lineCap || globalLineCap, fill: \"transparent\", ...rest }));\n}\n", "import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext } from 'react';\nimport Context from './context';\nexport default function Indicator({ fontSize = 45, color = 'white', fontFamily, children, ...rest }) {\n    const { value, radius, rotation, fontFamily: globalFontFamily, } = useContext(Context);\n    const textProps = {\n        transform: `rotate(${360 - rotation}, ${radius}, ${radius})`,\n    };\n    const fixedValue = Number(value).toFixed();\n    if (children)\n        return children(fixedValue, textProps);\n    return (_jsx(\"text\", { ...textProps, x: radius, y: radius + radius / 2 + 10, textAnchor: \"middle\", fontSize: fontSize, fontFamily: fontFamily || globalFontFamily, fill: color, ...rest, children: fixedValue }));\n}\n", "import { Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useContext, useMemo } from 'react';\nimport { polarToCartesian } from './utils';\nimport Context from './context';\nconst getMarkPosition = (angle, offset, radius) => {\n    return polarToCartesian(radius, radius, radius + offset, angle);\n};\nexport default function Marks({ step = 10, lineCap = 'butt', lineColor = 'white', lineOpacity = 1, numbersRadius = 17, fontSize = 18, lineSize = 12, children, }) {\n    const { rotation, min, max, angle, radius, fontFamily } = useContext(Context);\n    const marks = useMemo(() => {\n        const stepsLength = Math.round((max - min) / step);\n        const gap = angle / stepsLength;\n        return [...Array(stepsLength + 1)].map((val, index) => {\n            const actualAngle = gap * index;\n            const isEven = index % 2 == 0;\n            const size = isEven ? lineSize : lineSize - 5;\n            const { x: x1, y: y1 } = getMarkPosition(actualAngle, 0, radius);\n            const { x: x2, y: y2 } = getMarkPosition(actualAngle, -size, radius);\n            const { x, y } = getMarkPosition(actualAngle, -lineSize - numbersRadius, radius);\n            return {\n                coordinates: { x1, y1, x2, y2 },\n                isEven,\n                textProps: { x, y, transform: `rotate(${360 - rotation}, ${x}, ${y})` },\n                value: Math.round((index * step) + min)\n            };\n        });\n    }, [max, min, step, radius, rotation, angle, lineSize]);\n    if (children)\n        return (_jsx(_Fragment, { children: marks.map(children) }));\n    return (_jsx(_Fragment, { children: marks.map((mark, i) => (_jsxs(\"g\", { children: [_jsx(\"line\", { ...mark.coordinates, stroke: lineColor, strokeWidth: mark.isEven ? 3 : 2, strokeOpacity: lineOpacity, strokeLinecap: lineCap }), mark.isEven && (_jsx(\"text\", { ...mark.textProps, fill: \"white\", textAnchor: \"middle\", alignmentBaseline: \"middle\", fontFamily: fontFamily, opacity: 0.8, fontSize: fontSize, children: mark.value }))] }, i))) }));\n}\n", "import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useContext } from 'react';\nimport Context from './context';\nexport default function Needle({ offset = 25, baseWidth = 6, baseOffset = 18, color = 'white', circleRadius = 15, circleColor, strokeLinejoin = 'round', children, }) {\n    const { currentFillAngle, radius, accentColor } = useContext(Context);\n    const bottom = radius + baseOffset;\n    const points = `\n    ${radius - baseWidth / 2}, ${bottom} ${radius + baseWidth / 2}, ${bottom} ${radius}, ${offset}\n  `;\n    const defaultNeedle = (_jsxs(\"g\", { children: [_jsx(\"circle\", { r: circleRadius, cx: radius, cy: radius, fill: circleColor || accentColor }), _jsx(\"polygon\", { points: points, fill: color, strokeWidth: \"2\", stroke: color, style: { strokeLinejoin } })] }));\n    return (_jsx(\"g\", { transform: `rotate(${currentFillAngle}, ${radius}, ${radius})`, children: children ? children() : defaultNeedle }));\n}\n", "import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext, useMemo } from 'react';\nimport Context from './context';\nimport { getCirclePath } from './utils';\nexport default function Progress({ color, arcWidth = 5, lineCap, ...rest }) {\n    const { accentColor, radius, lineCap: globalLineCap, currentFillAngle, } = useContext(Context);\n    const progressPath = useMemo(() => getCirclePath(radius, radius, radius - arcWidth / 2, 0, currentFillAngle), [radius, arcWidth, currentFillAngle]);\n    return (_jsx(\"path\", { d: progressPath, stroke: color || accentColor, strokeWidth: arcWidth, strokeLinecap: lineCap || globalLineCap, fill: \"transparent\", ...rest }));\n}\n", "import Speedometer from './Speedometer';\nexport default Speedometer;\nexport { default as Arc } from './Arc';\nexport { default as Background } from './Background';\nexport { default as DangerPath } from './DangerPath';\nexport { default as Indicator } from './Indicator';\nexport { default as Marks } from './Marks';\nexport { default as Needle } from './Needle';\nexport { default as Progress } from './Progress';\n"],
  "mappings": "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",
  "names": ["import_react", "_jsx", "import_jsx_runtime", "import_react", "_jsx", "import_jsx_runtime", "import_react", "_jsx", "import_jsx_runtime", "import_react", "_jsx", "import_jsx_runtime", "import_react", "_jsx", "import_jsx_runtime", "import_react", "_jsx", "_Fragment", "_jsxs", "import_jsx_runtime", "import_react", "_jsxs", "_jsx", "import_jsx_runtime", "import_react", "_jsx"]
}
