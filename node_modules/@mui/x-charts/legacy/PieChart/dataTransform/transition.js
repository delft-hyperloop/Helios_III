export var defaultTransitionConfig = {
  keys: function keys(item) {
    return item.id;
  },
  from: function from(_ref) {
    var innerRadius = _ref.innerRadius,
      outerRadius = _ref.outerRadius,
      cornerRadius = _ref.cornerRadius,
      startAngle = _ref.startAngle,
      endAngle = _ref.endAngle,
      paddingAngle = _ref.paddingAngle,
      color = _ref.color,
      isFaded = _ref.isFaded;
    return {
      innerRadius: innerRadius,
      outerRadius: (innerRadius + outerRadius) / 2,
      cornerRadius: cornerRadius,
      startAngle: (startAngle + endAngle) / 2,
      endAngle: (startAngle + endAngle) / 2,
      paddingAngle: paddingAngle,
      fill: color,
      opacity: isFaded ? 0.3 : 1
    };
  },
  leave: function leave(_ref2) {
    var innerRadius = _ref2.innerRadius,
      startAngle = _ref2.startAngle,
      endAngle = _ref2.endAngle;
    return {
      innerRadius: innerRadius,
      outerRadius: innerRadius,
      startAngle: (startAngle + endAngle) / 2,
      endAngle: (startAngle + endAngle) / 2
    };
  },
  enter: function enter(_ref3) {
    var innerRadius = _ref3.innerRadius,
      outerRadius = _ref3.outerRadius,
      startAngle = _ref3.startAngle,
      endAngle = _ref3.endAngle;
    return {
      innerRadius: innerRadius,
      outerRadius: outerRadius,
      startAngle: startAngle,
      endAngle: endAngle
    };
  },
  update: function update(_ref4) {
    var innerRadius = _ref4.innerRadius,
      outerRadius = _ref4.outerRadius,
      cornerRadius = _ref4.cornerRadius,
      startAngle = _ref4.startAngle,
      endAngle = _ref4.endAngle,
      paddingAngle = _ref4.paddingAngle,
      color = _ref4.color,
      isFaded = _ref4.isFaded;
    return {
      innerRadius: innerRadius,
      outerRadius: outerRadius,
      cornerRadius: cornerRadius,
      startAngle: startAngle,
      endAngle: endAngle,
      paddingAngle: paddingAngle,
      fill: color,
      opacity: isFaded ? 0.3 : 1
    };
  },
  config: {
    tension: 120,
    friction: 14,
    clamp: true
  }
};
export var defaultLabelTransitionConfig = {
  keys: function keys(item) {
    return item.id;
  },
  from: function from(_ref5) {
    var innerRadius = _ref5.innerRadius,
      outerRadius = _ref5.outerRadius,
      arcLabelRadius = _ref5.arcLabelRadius,
      cornerRadius = _ref5.cornerRadius,
      startAngle = _ref5.startAngle,
      endAngle = _ref5.endAngle,
      paddingAngle = _ref5.paddingAngle;
    return {
      innerRadius: innerRadius,
      outerRadius: (innerRadius + outerRadius) / 2,
      cornerRadius: cornerRadius,
      arcLabelRadius: arcLabelRadius,
      startAngle: (startAngle + endAngle) / 2,
      endAngle: (startAngle + endAngle) / 2,
      paddingAngle: paddingAngle,
      opacity: 0
    };
  },
  leave: function leave(_ref6) {
    var innerRadius = _ref6.innerRadius,
      startAngle = _ref6.startAngle,
      endAngle = _ref6.endAngle;
    return {
      innerRadius: innerRadius,
      outerRadius: innerRadius,
      arcLabelRadius: innerRadius,
      startAngle: (startAngle + endAngle) / 2,
      endAngle: (startAngle + endAngle) / 2,
      opacity: 0
    };
  },
  enter: function enter(_ref7) {
    var innerRadius = _ref7.innerRadius,
      outerRadius = _ref7.outerRadius,
      startAngle = _ref7.startAngle,
      endAngle = _ref7.endAngle,
      arcLabelRadius = _ref7.arcLabelRadius;
    return {
      innerRadius: innerRadius,
      outerRadius: outerRadius,
      startAngle: startAngle,
      endAngle: endAngle,
      arcLabelRadius: arcLabelRadius,
      opacity: 1
    };
  },
  update: function update(_ref8) {
    var innerRadius = _ref8.innerRadius,
      outerRadius = _ref8.outerRadius,
      cornerRadius = _ref8.cornerRadius,
      startAngle = _ref8.startAngle,
      endAngle = _ref8.endAngle,
      paddingAngle = _ref8.paddingAngle,
      arcLabelRadius = _ref8.arcLabelRadius;
    return {
      innerRadius: innerRadius,
      outerRadius: outerRadius,
      cornerRadius: cornerRadius,
      startAngle: startAngle,
      endAngle: endAngle,
      paddingAngle: paddingAngle,
      arcLabelRadius: arcLabelRadius,
      opacity: 1
    };
  },
  config: {
    tension: 120,
    friction: 14,
    clamp: true
  }
};