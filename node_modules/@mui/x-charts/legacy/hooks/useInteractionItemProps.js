import * as React from 'react';
import { InteractionContext } from '../context/InteractionProvider';
import { HighlighContext } from '../context/HighlightProvider';
export var useInteractionItemProps = function useInteractionItemProps(scope) {
  var _React$useContext = React.useContext(InteractionContext),
    dispatchInteraction = _React$useContext.dispatch;
  var _React$useContext2 = React.useContext(HighlighContext),
    dispatchHighlight = _React$useContext2.dispatch;
  var getInteractionItemProps = function getInteractionItemProps(data) {
    var onMouseEnter = function onMouseEnter() {
      dispatchInteraction({
        type: 'enterItem',
        data: data
      });
      dispatchHighlight({
        type: 'enterItem',
        item: data,
        scope: scope
      });
    };
    var onMouseLeave = function onMouseLeave() {
      dispatchInteraction({
        type: 'leaveItem',
        data: data
      });
      dispatchHighlight({
        type: 'leaveItem',
        item: data
      });
    };
    return {
      onMouseEnter: onMouseEnter,
      onMouseLeave: onMouseLeave
    };
  };
  return getInteractionItemProps;
};
export var getIsHighlighted = function getIsHighlighted(selectedItem, currentItem, highlightScope) {
  if (!(highlightScope != null && highlightScope.highlighted) || highlightScope.highlighted === 'none' || selectedItem === null) {
    return false;
  }
  var isSeriesSelected = selectedItem.type === currentItem.type && selectedItem.seriesId === currentItem.seriesId;
  if (!isSeriesSelected) {
    return false;
  }
  if (highlightScope.highlighted === 'series') {
    return isSeriesSelected;
  }
  return selectedItem.dataIndex !== undefined && selectedItem.dataIndex === currentItem.dataIndex;
};
export var getIsFaded = function getIsFaded(selectedItem, currentItem, highlightScope) {
  if (!(highlightScope != null && highlightScope.faded) || highlightScope.faded === 'none' || selectedItem === null) {
    return false;
  }
  var isSeriesSelected = selectedItem.type === currentItem.type && selectedItem.seriesId === currentItem.seriesId;
  if (highlightScope.faded === 'series') {
    return isSeriesSelected && selectedItem.dataIndex !== currentItem.dataIndex;
  }
  if (highlightScope.faded === 'global') {
    if (!isSeriesSelected) {
      return true;
    }
    return selectedItem.dataIndex !== undefined && selectedItem.dataIndex !== currentItem.dataIndex;
  }
  return false;
};